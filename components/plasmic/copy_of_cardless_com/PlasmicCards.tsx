// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5bwAVSS7yxRyYYekzZSF6R
// Component: UNUt5VXPoZrd
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import ProductHero from "../../ProductHero"; // plasmic-import: 065U9QSynAe8/component
import PaddingWrapper from "../../PaddingWrapper"; // plasmic-import: 4i10JAkWDCTW/component
import OfferTerms from "../../OfferTerms"; // plasmic-import: JiFB2-JKD_Yz/component
import BigCallOut from "../../BigCallOut"; // plasmic-import: u4knHUDTWZ35/component
import ItemCarousel from "../../ItemCarousel"; // plasmic-import: T8OSoIuEHjkb/component
import ItemCarouselItem from "../../ItemCarouselItem"; // plasmic-import: zUXky6xuKkg7/component
import BenefitCallOut from "../../BenefitCallOut"; // plasmic-import: E_Hg5r5Konxr/component
import ImageLeft from "../../ImageLeft"; // plasmic-import: i5UR_SxBMe0v/component
import EarningCallout from "../../EarningCallout"; // plasmic-import: 3Kdn_D8OZEnd/component
import MobileAppMock from "../../MobileAppMock"; // plasmic-import: L7fXatbRFIgn/component
import PriceCallout from "../../PriceCallout"; // plasmic-import: 4aMvp_Ghnv6n/component
import Footer from "../../Footer"; // plasmic-import: 4TDmEKfWsWRr/component

import {
  UnnamedGlobalGroupOfVariantsValue,
  useUnnamedGlobalGroupOfVariants
} from "./PlasmicGlobalVariant__UnnamedGlobalGroupOfVariants"; // plasmic-import: RIq68Up0Sibe/globalVariant
import { useScreenVariants as useScreenVariantsbUUiKYc55Zpu } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: bUUiKYc55Zpu/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import * as projectcss from "./plasmic_copy_of_cardless_com.module.css"; // plasmic-import: 5bwAVSS7yxRyYYekzZSF6R/projectcss
import * as sty from "./PlasmicCards.module.css"; // plasmic-import: UNUt5VXPoZrd/css

import GiftcardWeb48SvgIcon from "./icons/PlasmicIcon__GiftcardWeb48Svg"; // plasmic-import: nWHKeg_w4SVr9/icon
import GiftcardWeb48Svg2Icon from "./icons/PlasmicIcon__GiftcardWeb48Svg2"; // plasmic-import: c0ydqhMYeTavv/icon
import GiftcardWeb48Svg3Icon from "./icons/PlasmicIcon__GiftcardWeb48Svg3"; // plasmic-import: gm4opkb3sj08J/icon
import GiftcardWeb48Svg4Icon from "./icons/PlasmicIcon__GiftcardWeb48Svg4"; // plasmic-import: XxWC7oyLDkCNN/icon
import CashWeb48SvgIcon from "./icons/PlasmicIcon__CashWeb48Svg"; // plasmic-import: j5bElzQpwBkZ-/icon
import CashWeb48Svg2Icon from "./icons/PlasmicIcon__CashWeb48Svg2"; // plasmic-import: Xl1FVNot3w_Kd/icon
import CashWeb48Svg3Icon from "./icons/PlasmicIcon__CashWeb48Svg3"; // plasmic-import: cqgzSehsBWU7b/icon
import CashWeb48Svg4Icon from "./icons/PlasmicIcon__CashWeb48Svg4"; // plasmic-import: hyX9Mf7rqV8dX/icon
import DonateWeb48SvgIcon from "./icons/PlasmicIcon__DonateWeb48Svg"; // plasmic-import: KLaSbDido_xIC/icon
import DonateWeb48Svg2Icon from "./icons/PlasmicIcon__DonateWeb48Svg2"; // plasmic-import: OfVggzDO4VM69/icon
import DonateWeb48Svg3Icon from "./icons/PlasmicIcon__DonateWeb48Svg3"; // plasmic-import: Jv6sSa8c0D_d9/icon
import DonateWeb48Svg4Icon from "./icons/PlasmicIcon__DonateWeb48Svg4"; // plasmic-import: 6GnRR5hfrQ2He/icon
import TransferWeb48SvgIcon from "./icons/PlasmicIcon__TransferWeb48Svg"; // plasmic-import: LcNymbd3BV8Yk/icon
import TransferWeb48Svg2Icon from "./icons/PlasmicIcon__TransferWeb48Svg2"; // plasmic-import: 4mF7XdINhTs_4/icon
import TransferWeb48Svg3Icon from "./icons/PlasmicIcon__TransferWeb48Svg3"; // plasmic-import: txFteifMU8wTQ/icon
import TransferWeb48Svg4Icon from "./icons/PlasmicIcon__TransferWeb48Svg4"; // plasmic-import: uZi9UzTt6EaX3/icon

export type PlasmicCards__VariantMembers = {
  manutd: "manutd";
  celtics: "celtics";
  cavs: "cavs";
  marlins: "marlins";
};

export type PlasmicCards__VariantsArgs = {
  manutd?: SingleBooleanChoiceArg<"manutd">;
  celtics?: SingleBooleanChoiceArg<"celtics">;
  cavs?: SingleBooleanChoiceArg<"cavs">;
  marlins?: SingleBooleanChoiceArg<"marlins">;
};

type VariantPropType = keyof PlasmicCards__VariantsArgs;
export const PlasmicCards__VariantProps = new Array<VariantPropType>(
  "manutd",
  "celtics",
  "cavs",
  "marlins"
);

export type PlasmicCards__ArgsType = {};
type ArgPropType = keyof PlasmicCards__ArgsType;
export const PlasmicCards__ArgProps = new Array<ArgPropType>();

export type PlasmicCards__OverridesType = {
  root?: p.Flex<"div">;
  productHero?: p.Flex<typeof ProductHero>;
  content2?: p.Flex<"div">;
  copy9?: p.Flex<"div">;
  coloredHeading?: p.Flex<"div">;
  offer2?: p.Flex<typeof OfferTerms>;
  rates3?: p.Flex<"div">;
  hero2?: p.Flex<"div">;
  redeemShopSection?: p.Flex<"div">;
  copy?: p.Flex<"div">;
  coloredHeading2?: p.Flex<"div">;
  offer7?: p.Flex<typeof OfferTerms>;
  itemCarousel?: p.Flex<typeof ItemCarousel>;
  content?: p.Flex<"div">;
  columns?: p.Flex<"div">;
  imageLeft?: p.Flex<typeof ImageLeft>;
  oldTraffordDusk3?: p.Flex<"div">;
  copy8?: p.Flex<"div">;
  rates6?: p.Flex<"div">;
  earningsCopy9?: p.Flex<"div">;
  earningsCopy10?: p.Flex<"div">;
  offer8?: p.Flex<typeof OfferTerms>;
  mobileAppMock?: p.Flex<typeof MobileAppMock>;
  wrapper?: p.Flex<"div">;
  copyCta?: p.Flex<"div">;
  copy11?: p.Flex<"div">;
  subheadingWrapper?: p.Flex<"div">;
  offer?: p.Flex<typeof OfferTerms>;
  cta?: p.Flex<"div">;
  benefitsRow6?: p.Flex<"div">;
  pill6?: p.Flex<"a"> & Partial<LinkProps>;
  ratesTerms?: p.Flex<typeof OfferTerms>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultCardsProps {
  dataFetches: PlasmicCards__Fetches;
}

function PlasmicCards__RenderFunc(props: {
  variants: PlasmicCards__VariantsArgs;
  args: PlasmicCards__ArgsType;
  overrides: PlasmicCards__OverridesType;
  dataFetches?: PlasmicCards__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    unnamedGlobalGroupOfVariants: useUnnamedGlobalGroupOfVariants(),
    screen: useScreenVariantsbUUiKYc55Zpu()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {(hasVariant(variants, "manutd", "manutd") ? true : true) ? (
          <div
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              sty.root,
              {
                [sty.root__cavs]: hasVariant(variants, "cavs", "cavs"),
                [sty.root__celtics]: hasVariant(variants, "celtics", "celtics"),
                [sty.root__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                  hasVariant(variants, "celtics", "celtics") &&
                  hasVariant(
                    globalVariants,
                    "unnamedGlobalGroupOfVariants",
                    "unnamedVariant"
                  ),
                [sty.root__global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                  hasVariant(
                    globalVariants,
                    "unnamedGlobalGroupOfVariants",
                    "unnamedVariant"
                  ),
                [sty.root__manutd]: hasVariant(variants, "manutd", "manutd"),
                [sty.root__marlins]: hasVariant(variants, "marlins", "marlins")
              }
            )}
          >
            {true ? (
              <ProductHero
                data-plasmic-name={"productHero"}
                data-plasmic-override={overrides.productHero}
                cavs={
                  hasVariant(variants, "cavs", "cavs")
                    ? ("cavs" as const)
                    : undefined
                }
                celtics={
                  hasVariant(variants, "celtics", "celtics") &&
                  hasVariant(
                    globalVariants,
                    "unnamedGlobalGroupOfVariants",
                    "unnamedVariant"
                  )
                    ? ("celtics" as const)
                    : hasVariant(variants, "celtics", "celtics")
                    ? ("celtics" as const)
                    : undefined
                }
                className={classNames("__wab_instance", sty.productHero, {
                  [sty.productHero__cavs]: hasVariant(variants, "cavs", "cavs"),
                  [sty.productHero__celtics]: hasVariant(
                    variants,
                    "celtics",
                    "celtics"
                  ),
                  [sty.productHero__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                    hasVariant(variants, "celtics", "celtics") &&
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    ),
                  [sty.productHero__manutd]: hasVariant(
                    variants,
                    "manutd",
                    "manutd"
                  ),
                  [sty.productHero__marlins]: hasVariant(
                    variants,
                    "marlins",
                    "marlins"
                  )
                })}
                manutd={
                  hasVariant(variants, "manutd", "manutd") &&
                  hasVariant(globalVariants, "screen", "tabletSmall")
                    ? ("manutd" as const)
                    : hasVariant(variants, "manutd", "manutd") &&
                      hasVariant(globalVariants, "screen", "tablet")
                    ? ("manutd" as const)
                    : hasVariant(variants, "manutd", "manutd") &&
                      hasVariant(globalVariants, "screen", "laptopSmall")
                    ? ("manutd" as const)
                    : hasVariant(variants, "manutd", "manutd") &&
                      hasVariant(globalVariants, "screen", "laptop")
                    ? ("manutd" as const)
                    : hasVariant(variants, "manutd", "manutd")
                    ? ("manutd" as const)
                    : undefined
                }
                marlins={
                  hasVariant(variants, "marlins", "marlins")
                    ? ("marlins" as const)
                    : undefined
                }
                subtitle={
                  hasVariant(variants, "marlins", "marlins")
                    ? "worth at least $100 in statement credits and other rewards, after spending $1,000 in three months"
                    : hasVariant(variants, "celtics", "celtics")
                    ? "worth at least $300 in statement credits and other rewards, after spending $2,500 in three months"
                    : "On qualifying purchases in your first year, up to 100,000 bonus points*"
                }
                title={
                  hasVariant(variants, "marlins", "marlins")
                    ? "Earn 10,000 Points"
                    : hasVariant(variants, "celtics", "celtics")
                    ? "Earn 30,000 Points"
                    : "Earn Double Points!"
                }
              />
            ) : null}
            {(hasVariant(variants, "cavs", "cavs") ? true : true) ? (
              <div
                className={classNames(projectcss.all, sty.freeBox___7Hrom, {
                  [sty.freeBox__cavs___7HroMb5Eyw]: hasVariant(
                    variants,
                    "cavs",
                    "cavs"
                  )
                })}
              >
                <PaddingWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.paddingWrapper__k9Tbv,
                    {
                      [sty.paddingWrapper__cavs__k9Tbvb5Eyw]: hasVariant(
                        variants,
                        "cavs",
                        "cavs"
                      ),
                      [sty.paddingWrapper__manutd__k9Tbv93Fzh]: hasVariant(
                        variants,
                        "manutd",
                        "manutd"
                      )
                    }
                  )}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"content2"}
                    data-plasmic-override={overrides.content2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content2, {
                      [sty.content2__cavs]: hasVariant(
                        variants,
                        "cavs",
                        "cavs"
                      ),
                      [sty.content2__celtics]: hasVariant(
                        variants,
                        "celtics",
                        "celtics"
                      ),
                      [sty.content2__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                        hasVariant(variants, "celtics", "celtics") &&
                        hasVariant(
                          globalVariants,
                          "unnamedGlobalGroupOfVariants",
                          "unnamedVariant"
                        ),
                      [sty.content2__manutd]: hasVariant(
                        variants,
                        "manutd",
                        "manutd"
                      )
                    })}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"copy9"}
                      data-plasmic-override={overrides.copy9}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.copy9, {
                        [sty.copy9__celtics]: hasVariant(
                          variants,
                          "celtics",
                          "celtics"
                        )
                      })}
                    >
                      <div
                        data-plasmic-name={"coloredHeading"}
                        data-plasmic-override={overrides.coloredHeading}
                        className={classNames(
                          projectcss.all,
                          sty.coloredHeading
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eXrW0,
                            {
                              [sty.text__cavs__eXrW0B5Eyw]: hasVariant(
                                variants,
                                "cavs",
                                "cavs"
                              ),
                              [sty.text__celtics__eXrW0XtUvd]: hasVariant(
                                variants,
                                "celtics",
                                "celtics"
                              ),
                              [sty.text__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant__eXrW0XtUvdKmftK]:
                                hasVariant(variants, "celtics", "celtics") &&
                                hasVariant(
                                  globalVariants,
                                  "unnamedGlobalGroupOfVariants",
                                  "unnamedVariant"
                                ),
                              [sty.text__manutd__eXrW093Fzh]: hasVariant(
                                variants,
                                "manutd",
                                "manutd"
                              ),
                              [sty.text__marlins__eXrW0WDlkI]: hasVariant(
                                variants,
                                "marlins",
                                "marlins"
                              )
                            }
                          )}
                        >
                          {hasVariant(variants, "marlins", "marlins")
                            ? "Earn rewards on every purchase"
                            : hasVariant(variants, "cavs", "cavs")
                            ? "Earn double points your first year"
                            : hasVariant(variants, "celtics", "celtics")
                            ? "Earn rewards on every purchase"
                            : "Earn double points your first year"}
                        </div>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jy8V8,
                          {
                            [sty.text__cavs__jy8V8B5Eyw]: hasVariant(
                              variants,
                              "cavs",
                              "cavs"
                            ),
                            [sty.text__celtics__jy8V8XtUvd]: hasVariant(
                              variants,
                              "celtics",
                              "celtics"
                            ),
                            [sty.text__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant__jy8V8XtUvdKmftK]:
                              hasVariant(variants, "celtics", "celtics") &&
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              ),
                            [sty.text__manutd__jy8V893Fzh]: hasVariant(
                              variants,
                              "manutd",
                              "manutd"
                            ),
                            [sty.text__marlins__jy8V8WDlkI]: hasVariant(
                              variants,
                              "marlins",
                              "marlins"
                            )
                          }
                        )}
                      >
                        {hasVariant(variants, "marlins", "marlins")
                          ? "Plus, spend $1,000 within 3 months of opening your account and earn 10,000 points that can be redeemed for Marlins gear or more rewards*"
                          : hasVariant(variants, "celtics", "celtics") &&
                            hasVariant(globalVariants, "screen", "laptop")
                          ? "With special extras for Celtics purchases"
                          : hasVariant(variants, "celtics", "celtics")
                          ? "With special extras for Celtics purchases*"
                          : hasVariant(variants, "manutd", "manutd")
                          ? "Keep your account active each statement cycle for your first year, and earn double points. Bonus points added to your account following your account anniversary*"
                          : "Keep your account active each statement cycle for your first year, and earn double points. Bonus points added to your account following your account anniversary*"}
                      </div>

                      <OfferTerms
                        data-plasmic-name={"offer2"}
                        data-plasmic-override={overrides.offer2}
                        asterisk={
                          hasVariant(variants, "marlins", "marlins")
                            ? ("asterisk" as const)
                            : hasVariant(variants, "cavs", "cavs")
                            ? ("asterisk" as const)
                            : hasVariant(variants, "celtics", "celtics")
                            ? ("asterisk" as const)
                            : hasVariant(variants, "manutd", "manutd")
                            ? ("asterisk" as const)
                            : ("asterisk" as const)
                        }
                        className={classNames("__wab_instance", sty.offer2, {
                          [sty.offer2__cavs]: hasVariant(
                            variants,
                            "cavs",
                            "cavs"
                          ),
                          [sty.offer2__celtics]: hasVariant(
                            variants,
                            "celtics",
                            "celtics"
                          ),
                          [sty.offer2__manutd]: hasVariant(
                            variants,
                            "manutd",
                            "manutd"
                          ),
                          [sty.offer2__marlins]: hasVariant(
                            variants,
                            "marlins",
                            "marlins"
                          )
                        })}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__q1Y4,
                            "offerTermsModal" as const,
                            {
                              [sty.text__cavs__q1Y4B5Eyw]: hasVariant(
                                variants,
                                "cavs",
                                "cavs"
                              ),
                              [sty.text__celtics__q1Y4XtUvd]: hasVariant(
                                variants,
                                "celtics",
                                "celtics"
                              ),
                              [sty.text__manutd__q1Y493Fzh]: hasVariant(
                                variants,
                                "manutd",
                                "manutd"
                              ),
                              [sty.text__marlins__q1Y4WDlkI]: hasVariant(
                                variants,
                                "marlins",
                                "marlins"
                              )
                            }
                          )}
                        >
                          {"Offer Terms"}
                        </div>
                      </OfferTerms>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"rates3"}
                      data-plasmic-override={overrides.rates3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.rates3, {
                        [sty.rates3__cavs]: hasVariant(
                          variants,
                          "cavs",
                          "cavs"
                        ),
                        [sty.rates3__celtics]: hasVariant(
                          variants,
                          "celtics",
                          "celtics"
                        ),
                        [sty.rates3__manutd]: hasVariant(
                          variants,
                          "manutd",
                          "manutd"
                        ),
                        [sty.rates3__marlins]: hasVariant(
                          variants,
                          "marlins",
                          "marlins"
                        )
                      })}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__pzNfk,
                          {
                            [sty.freeBox__celtics__pzNfkXtUvd]: hasVariant(
                              variants,
                              "celtics",
                              "celtics"
                            ),
                            [sty.freeBox__manutd__pzNfk93Fzh]: hasVariant(
                              variants,
                              "manutd",
                              "manutd"
                            )
                          }
                        )}
                      >
                        <BigCallOut
                          body={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__rOl2Z,
                                {
                                  [sty.text__cavs__rOl2Zb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.text__celtics__rOl2ZxtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.text__manutd__rOl2Z93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.text__marlins__rOl2ZwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                }
                              )}
                            >
                              {hasVariant(variants, "marlins", "marlins")
                                ? "off at retail and concessions at loanDepot park*"
                                : hasVariant(variants, "cavs", "cavs")
                                ? "off purchases at the Cavaliers Team Shop*"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "off purchases at the online Celtics shop*"
                                : hasVariant(variants, "manutd", "manutd")
                                ? "off at The Official Manchester United Megastore, Red Cafe, and United Direct."
                                : "Points on rideshare and streaming services*"}
                            </div>
                          }
                          brandColors={
                            hasVariant(variants, "marlins", "marlins")
                              ? ["marlins"]
                              : hasVariant(variants, "cavs", "cavs")
                              ? ["cavs"]
                              : hasVariant(variants, "celtics", "celtics")
                              ? ["celtics"]
                              : hasVariant(variants, "manutd", "manutd")
                              ? ["manu"]
                              : undefined
                          }
                          className={classNames(
                            "__wab_instance",
                            sty.bigCallOut__fxw8T,
                            {
                              [sty.bigCallOut__cavs__fxw8Tb5Eyw]: hasVariant(
                                variants,
                                "cavs",
                                "cavs"
                              ),
                              [sty.bigCallOut__celtics__fxw8TXtUvd]: hasVariant(
                                variants,
                                "celtics",
                                "celtics"
                              ),
                              [sty.bigCallOut__manutd__fxw8T93Fzh]: hasVariant(
                                variants,
                                "manutd",
                                "manutd"
                              ),
                              [sty.bigCallOut__marlins__fxw8TwDlkI]: hasVariant(
                                variants,
                                "marlins",
                                "marlins"
                              )
                            }
                          )}
                          title={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__uu6Dt,
                                {
                                  [sty.text__cavs__uu6Dtb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.text__celtics__uu6DtXtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.text__manutd__uu6Dt93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.text__marlins__uu6DtwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                }
                              )}
                            >
                              {hasVariant(variants, "marlins", "marlins")
                                ? "5%"
                                : hasVariant(variants, "cavs", "cavs")
                                ? "10%"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "10%"
                                : hasVariant(variants, "manutd", "manutd")
                                ? "10%"
                                : "10x"}
                            </div>
                          }
                        />

                        <BigCallOut
                          body={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xQAjd,
                                {
                                  [sty.text__cavs__xQAjdb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.text__celtics__xQAjdXtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.text__manutd__xQAjd93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.text__marlins__xQAjdwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                }
                              )}
                            >
                              {hasVariant(variants, "marlins", "marlins")
                                ? "points on Marlins tickets*"
                                : hasVariant(variants, "cavs", "cavs")
                                ? "points on Cavs season tickets and streaming services*"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "points on Celtics tickets, rideshare services and \nstreaming services*"
                                : hasVariant(variants, "manutd", "manutd")
                                ? "Points at bars and restaurants on \nmatch days*"
                                : hasVariant(
                                    globalVariants,
                                    "screen",
                                    "tabletSmall"
                                  )
                                ? "Points at bars and restaurants on match days*"
                                : hasVariant(globalVariants, "screen", "tablet")
                                ? "Points at bars and restaurants on match days*"
                                : "Points at bars and restaurants on \nmatch days*"}
                            </div>
                          }
                          brandColors={
                            hasVariant(variants, "marlins", "marlins")
                              ? ["marlins"]
                              : hasVariant(variants, "cavs", "cavs")
                              ? ["cavs"]
                              : hasVariant(variants, "celtics", "celtics")
                              ? ["celtics"]
                              : hasVariant(variants, "manutd", "manutd")
                              ? ["manu"]
                              : undefined
                          }
                          className={classNames(
                            "__wab_instance",
                            sty.bigCallOut___7KPFc,
                            {
                              [sty.bigCallOut__cavs___7KPFcb5Eyw]: hasVariant(
                                variants,
                                "cavs",
                                "cavs"
                              ),
                              [sty.bigCallOut__celtics___7KPFcXtUvd]:
                                hasVariant(variants, "celtics", "celtics"),
                              [sty.bigCallOut__manutd___7KPFc93Fzh]: hasVariant(
                                variants,
                                "manutd",
                                "manutd"
                              ),
                              [sty.bigCallOut__marlins___7KPFcwDlkI]:
                                hasVariant(variants, "marlins", "marlins")
                            }
                          )}
                          doublePoints={
                            hasVariant(variants, "cavs", "cavs")
                              ? ("doublePoints" as const)
                              : hasVariant(variants, "manutd", "manutd")
                              ? ("doublePoints" as const)
                              : undefined
                          }
                          title={
                            (
                              hasVariant(variants, "cavs", "cavs")
                                ? true
                                : hasVariant(variants, "manutd", "manutd")
                                ? true
                                : true
                            ) ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__dKb7M,
                                  {
                                    [sty.text__cavs__dKb7Mb5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    ),
                                    [sty.text__celtics__dKb7MxtUvd]: hasVariant(
                                      variants,
                                      "celtics",
                                      "celtics"
                                    ),
                                    [sty.text__manutd__dKb7M93Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    ),
                                    [sty.text__marlins__dKb7MwDlkI]: hasVariant(
                                      variants,
                                      "marlins",
                                      "marlins"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "marlins", "marlins")
                                  ? "5x"
                                  : hasVariant(variants, "cavs", "cavs")
                                  ? "5x"
                                  : hasVariant(variants, "celtics", "celtics")
                                  ? "7x"
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? "5x"
                                  : "2x"}
                              </div>
                            ) : null
                          }
                          title2={
                            hasVariant(variants, "manutd", "manutd")
                              ? "10x"
                              : "10x"
                          }
                        />
                      </p.Stack>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__sxIjN,
                          {
                            [sty.freeBox__cavs__sxIjNb5Eyw]: hasVariant(
                              variants,
                              "cavs",
                              "cavs"
                            ),
                            [sty.freeBox__celtics__sxIjNxtUvd]: hasVariant(
                              variants,
                              "celtics",
                              "celtics"
                            ),
                            [sty.freeBox__manutd__sxIjN93Fzh]: hasVariant(
                              variants,
                              "manutd",
                              "manutd"
                            ),
                            [sty.freeBox__marlins__sxIjNwDlkI]: hasVariant(
                              variants,
                              "marlins",
                              "marlins"
                            )
                          }
                        )}
                      >
                        <BigCallOut
                          body={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0B35S,
                                {
                                  [sty.text__cavs___0B35Sb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.text__celtics___0B35SxtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.text__manutd___0B35S93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.text__marlins___0B35SwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                }
                              )}
                            >
                              {hasVariant(variants, "marlins", "marlins")
                                ? "points on dining, food delivery, gas and drugstores*"
                                : hasVariant(variants, "cavs", "cavs")
                                ? "points on other Cavs tickets, dining, grocery and delivery*"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "points on dining*"
                                : hasVariant(variants, "manutd", "manutd")
                                ? "points on rideshare and streaming services*"
                                : "Points on Celtics tickets, rideshare services and \nstreaming services*"}
                            </div>
                          }
                          brandColors={
                            hasVariant(variants, "marlins", "marlins")
                              ? ["marlins"]
                              : hasVariant(variants, "cavs", "cavs")
                              ? ["cavs"]
                              : hasVariant(variants, "celtics", "celtics")
                              ? ["celtics"]
                              : hasVariant(variants, "manutd", "manutd")
                              ? ["manu"]
                              : undefined
                          }
                          className={classNames(
                            "__wab_instance",
                            sty.bigCallOut___7HOqb,
                            {
                              [sty.bigCallOut__cavs___7HOqbb5Eyw]: hasVariant(
                                variants,
                                "cavs",
                                "cavs"
                              ),
                              [sty.bigCallOut__celtics___7HOqbXtUvd]:
                                hasVariant(variants, "celtics", "celtics"),
                              [sty.bigCallOut__manutd___7HOqb93Fzh]: hasVariant(
                                variants,
                                "manutd",
                                "manutd"
                              ),
                              [sty.bigCallOut__marlins___7HOqbwDlkI]:
                                hasVariant(variants, "marlins", "marlins")
                            }
                          )}
                          doublePoints={
                            hasVariant(variants, "cavs", "cavs")
                              ? ("doublePoints" as const)
                              : hasVariant(variants, "manutd", "manutd")
                              ? ("doublePoints" as const)
                              : undefined
                          }
                          title={
                            (
                              hasVariant(variants, "cavs", "cavs")
                                ? true
                                : hasVariant(variants, "manutd", "manutd")
                                ? true
                                : true
                            ) ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__bD5DI,
                                  {
                                    [sty.text__cavs__bD5DIb5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    ),
                                    [sty.text__celtics__bD5DIxtUvd]: hasVariant(
                                      variants,
                                      "celtics",
                                      "celtics"
                                    ),
                                    [sty.text__manutd__bD5DI93Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    ),
                                    [sty.text__marlins__bD5DIwDlkI]: hasVariant(
                                      variants,
                                      "marlins",
                                      "marlins"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "marlins", "marlins")
                                  ? "3x"
                                  : hasVariant(variants, "cavs", "cavs")
                                  ? "3x"
                                  : hasVariant(variants, "celtics", "celtics")
                                  ? "4x"
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? "5x"
                                  : "10x"}
                              </div>
                            ) : null
                          }
                          title2={
                            hasVariant(variants, "cavs", "cavs") ? "6x" : "10x"
                          }
                        />

                        {(
                          hasVariant(variants, "marlins", "marlins")
                            ? true
                            : true
                        ) ? (
                          <BigCallOut
                            body={"points on everything else*"}
                            brandColors={["marlins"]}
                            className={classNames(
                              "__wab_instance",
                              sty.bigCallOut__hg3Zq,
                              {
                                [sty.bigCallOut__marlins__hg3ZqwDlkI]:
                                  hasVariant(variants, "marlins", "marlins")
                              }
                            )}
                            title={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__pNnSq
                                )}
                              >
                                {"1x"}
                              </div>
                            }
                          />
                        ) : null}
                        {(
                          hasVariant(variants, "cavs", "cavs") ? true : true
                        ) ? (
                          <BigCallOut
                            body={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__olilv
                                )}
                              >
                                {"points on everything else*"}
                              </div>
                            }
                            brandColors={["cavs"]}
                            className={classNames(
                              "__wab_instance",
                              sty.bigCallOut__premx,
                              {
                                [sty.bigCallOut__cavs__premxb5Eyw]: hasVariant(
                                  variants,
                                  "cavs",
                                  "cavs"
                                )
                              }
                            )}
                            doublePoints={
                              hasVariant(variants, "cavs", "cavs")
                                ? ("doublePoints" as const)
                                : undefined
                            }
                            title={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__xpmNj,
                                  {
                                    [sty.text__cavs__xpmNJb5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "cavs", "cavs")
                                  ? "1x"
                                  : "2x"}
                              </div>
                            }
                            title2={
                              hasVariant(variants, "cavs", "cavs")
                                ? "2x"
                                : "10x"
                            }
                          />
                        ) : null}
                        {(
                          hasVariant(variants, "celtics", "celtics")
                            ? true
                            : true
                        ) ? (
                          <BigCallOut
                            body={
                              hasVariant(variants, "celtics", "celtics")
                                ? "points on groceries and drug stores*"
                                : "Points on rideshare and streaming services*"
                            }
                            brandColors={
                              hasVariant(variants, "celtics", "celtics")
                                ? ["celtics"]
                                : undefined
                            }
                            className={classNames(
                              "__wab_instance",
                              sty.bigCallOut__sbrhB,
                              {
                                [sty.bigCallOut__celtics__sbrhBxtUvd]:
                                  hasVariant(variants, "celtics", "celtics")
                              }
                            )}
                            title={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__qlgRh,
                                  {
                                    [sty.text__celtics__qlgRhXtUvd]: hasVariant(
                                      variants,
                                      "celtics",
                                      "celtics"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "celtics", "celtics")
                                  ? "2x"
                                  : "10x"}
                              </div>
                            }
                          />
                        ) : null}
                        {(
                          hasVariant(variants, "celtics", "celtics")
                            ? true
                            : hasVariant(variants, "manutd", "manutd")
                            ? true
                            : true
                        ) ? (
                          <BigCallOut
                            body={"points on everything else*"}
                            brandColors={["manu"]}
                            className={classNames(
                              "__wab_instance",
                              sty.bigCallOut__gWYyP,
                              {
                                [sty.bigCallOut__celtics__gWYyPxtUvd]:
                                  hasVariant(variants, "celtics", "celtics"),
                                [sty.bigCallOut__manutd__gWYyP93Fzh]:
                                  hasVariant(variants, "manutd", "manutd")
                              }
                            )}
                            doublePoints={
                              hasVariant(variants, "manutd", "manutd")
                                ? ("doublePoints" as const)
                                : undefined
                            }
                            title={
                              (
                                hasVariant(variants, "manutd", "manutd")
                                  ? true
                                  : true
                              ) ? (
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__xJi2B,
                                    {
                                      [sty.text__manutd__xJi2B93Fzh]:
                                        hasVariant(variants, "manutd", "manutd")
                                    }
                                  )}
                                >
                                  {hasVariant(variants, "manutd", "manutd")
                                    ? "1x"
                                    : "1x"}
                                </div>
                              ) : null
                            }
                            title2={
                              hasVariant(variants, "manutd", "manutd")
                                ? "2x"
                                : "10x"
                            }
                          />
                        ) : null}
                      </p.Stack>

                      {(
                        hasVariant(variants, "celtics", "celtics")
                          ? true
                          : hasVariant(variants, "manutd", "manutd")
                          ? true
                          : false
                      ) ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___0Ejc,
                            {
                              [sty.freeBox__celtics___0EjcxtUvd]: hasVariant(
                                variants,
                                "celtics",
                                "celtics"
                              ),
                              [sty.freeBox__manutd___0Ejc93Fzh]: hasVariant(
                                variants,
                                "manutd",
                                "manutd"
                              ),
                              [sty.freeBox__marlins___0EjCwDlkI]: hasVariant(
                                variants,
                                "marlins",
                                "marlins"
                              )
                            }
                          )}
                        >
                          {(
                            hasVariant(variants, "manutd", "manutd")
                              ? true
                              : true
                          ) ? (
                            <BigCallOut
                              body={
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__nitZ3,
                                    {
                                      [sty.text__cavs__nitZ3B5Eyw]: hasVariant(
                                        variants,
                                        "cavs",
                                        "cavs"
                                      ),
                                      [sty.text__celtics__nitZ3XtUvd]:
                                        hasVariant(
                                          variants,
                                          "celtics",
                                          "celtics"
                                        ),
                                      [sty.text__manutd__nitZ393Fzh]:
                                        hasVariant(
                                          variants,
                                          "manutd",
                                          "manutd"
                                        ),
                                      [sty.text__marlins__nitZ3WDlkI]:
                                        hasVariant(
                                          variants,
                                          "marlins",
                                          "marlins"
                                        )
                                    }
                                  )}
                                >
                                  {hasVariant(variants, "marlins", "marlins")
                                    ? "Points on dining, food delivery, gas, and drugstores*"
                                    : hasVariant(variants, "cavs", "cavs")
                                    ? "Points on everything else"
                                    : hasVariant(variants, "celtics", "celtics")
                                    ? "points on everything else*"
                                    : hasVariant(variants, "manutd", "manutd")
                                    ? "points on rideshare and streaming services*"
                                    : "Points on Celtics tickets, rideshare services and \nstreaming services*"}
                                </div>
                              }
                              brandColors={
                                hasVariant(variants, "marlins", "marlins")
                                  ? ["marlins"]
                                  : hasVariant(variants, "cavs", "cavs")
                                  ? ["cavs"]
                                  : hasVariant(variants, "celtics", "celtics")
                                  ? ["celtics"]
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? ["manu"]
                                  : undefined
                              }
                              className={classNames(
                                "__wab_instance",
                                sty.bigCallOut___1ZEvo,
                                {
                                  [sty.bigCallOut__cavs___1ZEvOb5Eyw]:
                                    hasVariant(variants, "cavs", "cavs"),
                                  [sty.bigCallOut__celtics___1ZEvoxtUvd]:
                                    hasVariant(variants, "celtics", "celtics"),
                                  [sty.bigCallOut__manutd___1ZEvo93Fzh]:
                                    hasVariant(variants, "manutd", "manutd"),
                                  [sty.bigCallOut__marlins___1ZEvOwDlkI]:
                                    hasVariant(variants, "marlins", "marlins")
                                }
                              )}
                              title={
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text__aJjs,
                                    {
                                      [sty.text__cavs__aJjsB5Eyw]: hasVariant(
                                        variants,
                                        "cavs",
                                        "cavs"
                                      ),
                                      [sty.text__celtics__aJjsXtUvd]:
                                        hasVariant(
                                          variants,
                                          "celtics",
                                          "celtics"
                                        ),
                                      [sty.text__manutd__aJjs93Fzh]: hasVariant(
                                        variants,
                                        "manutd",
                                        "manutd"
                                      ),
                                      [sty.text__marlins__aJjsWDlkI]:
                                        hasVariant(
                                          variants,
                                          "marlins",
                                          "marlins"
                                        )
                                    }
                                  )}
                                >
                                  {hasVariant(variants, "marlins", "marlins")
                                    ? "3x"
                                    : hasVariant(variants, "cavs", "cavs")
                                    ? "6x"
                                    : hasVariant(variants, "celtics", "celtics")
                                    ? "1x"
                                    : hasVariant(variants, "manutd", "manutd")
                                    ? "5x"
                                    : "10x"}
                                </div>
                              }
                            />
                          ) : null}
                          {(
                            hasVariant(variants, "celtics", "celtics")
                              ? true
                              : hasVariant(variants, "manutd", "manutd")
                              ? true
                              : true
                          ) ? (
                            <BigCallOut
                              body={"points on everything else*"}
                              brandColors={["manu"]}
                              className={classNames(
                                "__wab_instance",
                                sty.bigCallOut__qWaFs,
                                {
                                  [sty.bigCallOut__celtics__qWaFsXtUvd]:
                                    hasVariant(variants, "celtics", "celtics"),
                                  [sty.bigCallOut__manutd__qWaFs93Fzh]:
                                    hasVariant(variants, "manutd", "manutd")
                                }
                              )}
                              title={"1x"}
                            />
                          ) : null}
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  </p.Stack>
                </PaddingWrapper>
              </div>
            ) : null}
            {true ? (
              <p.Stack
                as={"div"}
                data-plasmic-name={"hero2"}
                data-plasmic-override={overrides.hero2}
                hasGap={true}
                className={classNames(projectcss.all, sty.hero2, {
                  [sty.hero2__celtics]: hasVariant(
                    variants,
                    "celtics",
                    "celtics"
                  ),
                  [sty.hero2__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                    hasVariant(variants, "celtics", "celtics") &&
                    hasVariant(
                      globalVariants,
                      "unnamedGlobalGroupOfVariants",
                      "unnamedVariant"
                    ),
                  [sty.hero2__manutd]: hasVariant(variants, "manutd", "manutd"),
                  [sty.hero2__marlins]: hasVariant(
                    variants,
                    "marlins",
                    "marlins"
                  )
                })}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox__bQwbe, {
                    [sty.freeBox__manutd__bQwbe93Fzh]: hasVariant(
                      variants,
                      "manutd",
                      "manutd"
                    )
                  })}
                  id={"rewards" as const}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"redeemShopSection"}
                    data-plasmic-override={overrides.redeemShopSection}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.redeemShopSection
                    )}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"copy"}
                      data-plasmic-override={overrides.copy}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.copy, {
                        [sty.copy__cavs]: hasVariant(variants, "cavs", "cavs"),
                        [sty.copy__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                          hasVariant(variants, "celtics", "celtics") &&
                          hasVariant(
                            globalVariants,
                            "unnamedGlobalGroupOfVariants",
                            "unnamedVariant"
                          ),
                        [sty.copy__manutd]: hasVariant(
                          variants,
                          "manutd",
                          "manutd"
                        ),
                        [sty.copy__marlins]: hasVariant(
                          variants,
                          "marlins",
                          "marlins"
                        )
                      })}
                    >
                      <div
                        data-plasmic-name={"coloredHeading2"}
                        data-plasmic-override={overrides.coloredHeading2}
                        className={classNames(
                          projectcss.all,
                          sty.coloredHeading2
                        )}
                      >
                        {(
                          hasVariant(variants, "marlins", "marlins")
                            ? true
                            : hasVariant(variants, "celtics", "celtics")
                            ? true
                            : true
                        ) ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__p1LIy,
                              {
                                [sty.freeBox__cavs__p1LIYb5Eyw]: hasVariant(
                                  variants,
                                  "cavs",
                                  "cavs"
                                ),
                                [sty.freeBox__celtics__p1LIyxtUvd]: hasVariant(
                                  variants,
                                  "celtics",
                                  "celtics"
                                ),
                                [sty.freeBox__marlins__p1LIYwDlkI]: hasVariant(
                                  variants,
                                  "marlins",
                                  "marlins"
                                )
                              }
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__fY2Ot,
                                {
                                  [sty.text__cavs__fY2OTb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.text__celtics__fY2OtxtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.text__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant__fY2OtxtUvdKmftK]:
                                    hasVariant(
                                      variants,
                                      "celtics",
                                      "celtics"
                                    ) &&
                                    hasVariant(
                                      globalVariants,
                                      "unnamedGlobalGroupOfVariants",
                                      "unnamedVariant"
                                    ),
                                  [sty.text__manutd__fY2Ot93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.text__marlins__fY2OTwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                }
                              )}
                            >
                              {
                                "Redeem points for premium items and experiences"
                              }
                            </div>
                          </div>
                        ) : null}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__y1KqP,
                          {
                            [sty.text__cavs__y1KqPb5Eyw]: hasVariant(
                              variants,
                              "cavs",
                              "cavs"
                            ),
                            [sty.text__celtics__y1KqPxtUvd]: hasVariant(
                              variants,
                              "celtics",
                              "celtics"
                            ),
                            [sty.text__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant__y1KqPxtUvdKmftK]:
                              hasVariant(variants, "celtics", "celtics") &&
                              hasVariant(
                                globalVariants,
                                "unnamedGlobalGroupOfVariants",
                                "unnamedVariant"
                              ),
                            [sty.text__manutd__y1KqP93Fzh]: hasVariant(
                              variants,
                              "manutd",
                              "manutd"
                            ),
                            [sty.text__marlins__y1KqPwDlkI]: hasVariant(
                              variants,
                              "marlins",
                              "marlins"
                            )
                          }
                        )}
                      >
                        {hasVariant(variants, "marlins", "marlins")
                          ? "Rewards include VIP experiences, seat upgrades and autographed memorabilia*"
                          : hasVariant(variants, "cavs", "cavs")
                          ? "Rewards include meeting your favorite players, team-signed balls and jerseys, or even being an honorary benchwarmer*"
                          : hasVariant(variants, "celtics", "celtics") &&
                            hasVariant(
                              globalVariants,
                              "unnamedGlobalGroupOfVariants",
                              "unnamedVariant"
                            )
                          ? "Rewards include team-signed balls and jerseys*"
                          : "Rewards include team-signed merchandise, meeting Manchester United legends, and much more!*"}
                      </div>

                      {(
                        hasVariant(variants, "manutd", "manutd") ? true : true
                      ) ? (
                        <OfferTerms
                          data-plasmic-name={"offer7"}
                          data-plasmic-override={overrides.offer7}
                          asterisk={
                            hasVariant(variants, "manutd", "manutd")
                              ? ("asterisk" as const)
                              : ("asterisk" as const)
                          }
                          children2={
                            true ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___6X9PJ,
                                  {
                                    [sty.text__manutd___6X9PJ93Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "manutd", "manutd")
                                  ? "*Subject to availability. See "
                                  : "*subject to availability. See "}
                              </div>
                            ) : null
                          }
                          className={classNames("__wab_instance", sty.offer7, {
                            [sty.offer7__manutd]: hasVariant(
                              variants,
                              "manutd",
                              "manutd"
                            )
                          })}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__nFyZr,
                              "offerTermsModal" as const,
                              {
                                [sty.text__manutd__nFyZr93Fzh]: hasVariant(
                                  variants,
                                  "manutd",
                                  "manutd"
                                )
                              }
                            )}
                          >
                            {hasVariant(variants, "manutd", "manutd")
                              ? "Offer Terms"
                              : "Offer Terms"}
                          </div>
                        </OfferTerms>
                      ) : null}
                    </p.Stack>

                    <ItemCarousel
                      data-plasmic-name={"itemCarousel"}
                      data-plasmic-override={overrides.itemCarousel}
                      className={classNames(
                        "__wab_instance",
                        sty.itemCarousel,
                        {
                          [sty.itemCarousel__cavs]: hasVariant(
                            variants,
                            "cavs",
                            "cavs"
                          ),
                          [sty.itemCarousel__manutd]: hasVariant(
                            variants,
                            "manutd",
                            "manutd"
                          ),
                          [sty.itemCarousel__marlins]: hasVariant(
                            variants,
                            "marlins",
                            "marlins"
                          )
                        }
                      )}
                      items={
                        <React.Fragment>
                          <ItemCarouselItem
                            body={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__sQfIm,
                                  {
                                    [sty.text__cavs__sQfIMb5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    ),
                                    [sty.text__celtics__sQfImxtUvd]: hasVariant(
                                      variants,
                                      "celtics",
                                      "celtics"
                                    ),
                                    [sty.text__manutd__sQfIm93Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    ),
                                    [sty.text__marlins__sQfIMwDlkI]: hasVariant(
                                      variants,
                                      "marlins",
                                      "marlins"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "marlins", "marlins")
                                  ? "15,000 points"
                                  : hasVariant(variants, "cavs", "cavs")
                                  ? "30,000 points"
                                  : hasVariant(variants, "celtics", "celtics")
                                  ? "20,000 points"
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? "37,500 points"
                                  : "15,000 points"}
                              </div>
                            }
                            className={classNames(
                              "__wab_instance",
                              sty.itemCarouselItem___0FvPc,
                              {
                                [sty.itemCarouselItem__cavs___0FvPCb5Eyw]:
                                  hasVariant(variants, "cavs", "cavs"),
                                [sty.itemCarouselItem__manutd___0FvPc93Fzh]:
                                  hasVariant(variants, "manutd", "manutd")
                              }
                            )}
                            image2={
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__goHhV, {
                                  [sty.img__cavs__goHhVb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.img__celtics__goHhVxtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.img__manutd__goHhV93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.img__marlins__goHhVwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                })}
                                displayHeight={
                                  hasVariant(variants, "manutd", "manutd")
                                    ? ("auto" as const)
                                    : ("100%" as const)
                                }
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"100%" as const}
                                loading={"lazy" as const}
                                src={
                                  hasVariant(variants, "marlins", "marlins")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/chisholmJr1Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "cavs", "cavs")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/loveJersey11Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "celtics", "celtics")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/poweJersey11Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "manutd", "manutd")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/rashfordJersey11Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : undefined
                                }
                              />
                            }
                            title={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___82Nd1,
                                  {
                                    [sty.text__cavs___82Nd1B5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    ),
                                    [sty.text__celtics___82Nd1XtUvd]:
                                      hasVariant(
                                        variants,
                                        "celtics",
                                        "celtics"
                                      ),
                                    [sty.text__manutd___82Nd193Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    ),
                                    [sty.text__marlins___82Nd1WDlkI]:
                                      hasVariant(variants, "marlins", "marlins")
                                  }
                                )}
                              >
                                {hasVariant(variants, "marlins", "marlins")
                                  ? "Autographed Jazz Chrisholm Jr jersey"
                                  : hasVariant(variants, "cavs", "cavs")
                                  ? "Autographed Kevin Love jersey"
                                  : hasVariant(variants, "celtics", "celtics")
                                  ? "Autographed Leon Powe jersey"
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? "Autographed Marcus Rashford jersey"
                                  : "Item 1"}
                              </div>
                            }
                          />

                          <ItemCarouselItem
                            body={
                              hasVariant(variants, "cavs", "cavs")
                                ? "30,000 points"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "30,000 points"
                                : hasVariant(variants, "manutd", "manutd")
                                ? "37,500 points"
                                : "15,000 points"
                            }
                            className={classNames(
                              "__wab_instance",
                              sty.itemCarouselItem__tBf2Z,
                              {
                                [sty.itemCarouselItem__manutd__tBf2Z93Fzh]:
                                  hasVariant(variants, "manutd", "manutd")
                              }
                            )}
                            image2={
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__pbnFg, {
                                  [sty.img__cavs__pbnFGb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.img__celtics__pbnFgxtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.img__manutd__pbnFg93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.img__marlins__pbnFGwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                })}
                                displayHeight={"312px" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"100%" as const}
                                loading={"lazy" as const}
                                src={
                                  hasVariant(variants, "marlins", "marlins")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/rogers1Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "cavs", "cavs")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/nanceJrJersey1Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "celtics", "celtics")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/basketballSignedBird11Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "manutd", "manutd")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/greenwoodJersey11Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : undefined
                                }
                              />
                            }
                            title={
                              hasVariant(variants, "marlins", "marlins")
                                ? "Autographed Trevor Rogers jersey"
                                : hasVariant(variants, "cavs", "cavs")
                                ? "Autographed Larry Nance, Jr. jersey"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "Autgraphed Lary Bird basketball"
                                : hasVariant(variants, "manutd", "manutd")
                                ? "Autographed Mason Greenwood jersey"
                                : "Item 2"
                            }
                          />

                          <ItemCarouselItem
                            body={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__bvdqi,
                                  {
                                    [sty.text__cavs__bvdqib5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    ),
                                    [sty.text__celtics__bvdqiXtUvd]: hasVariant(
                                      variants,
                                      "celtics",
                                      "celtics"
                                    ),
                                    [sty.text__manutd__bvdqi93Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "cavs", "cavs")
                                  ? "22,500 points"
                                  : hasVariant(variants, "celtics", "celtics")
                                  ? "45,000 points"
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? "37,500 points"
                                  : "15,000 points"}
                              </div>
                            }
                            className={classNames(
                              "__wab_instance",
                              sty.itemCarouselItem__gzfVq,
                              {
                                [sty.itemCarouselItem__manutd__gzfVq93Fzh]:
                                  hasVariant(variants, "manutd", "manutd")
                              }
                            )}
                            image2={
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__nuHiq, {
                                  [sty.img__cavs__nuHiqb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.img__celtics__nuHiqXtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.img__manutd__nuHiq93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.img__marlins__nuHiqwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                })}
                                displayHeight={"312px" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"100%" as const}
                                loading={"lazy" as const}
                                src={
                                  hasVariant(variants, "marlins", "marlins")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/alcantara1Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "cavs", "cavs")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/herschelBackpackCSword11Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "celtics", "celtics")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/floorPieceSigned11Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "manutd", "manutd")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/jamesJersey11Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : undefined
                                }
                              />
                            }
                            title={
                              hasVariant(variants, "marlins", "marlins")
                                ? "Autographed Sandy Alcantra jersey"
                                : hasVariant(variants, "cavs", "cavs")
                                ? "Cavs backpack"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "Autographed floor piece"
                                : hasVariant(variants, "manutd", "manutd")
                                ? "Autographed Daniel James jersey"
                                : "Item 3"
                            }
                          />

                          <ItemCarouselItem
                            body={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__tgsCt,
                                  {
                                    [sty.text__cavs__tgsCtb5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    ),
                                    [sty.text__celtics__tgsCtXtUvd]: hasVariant(
                                      variants,
                                      "celtics",
                                      "celtics"
                                    ),
                                    [sty.text__manutd__tgsCt93Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "cavs", "cavs")
                                  ? "30,000 points"
                                  : hasVariant(variants, "celtics", "celtics")
                                  ? "45,000 points"
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? "37,500 points"
                                  : "15,000 points"}
                              </div>
                            }
                            className={classNames(
                              "__wab_instance",
                              sty.itemCarouselItem__wgtrf,
                              {
                                [sty.itemCarouselItem__celtics__wgtrfXtUvd]:
                                  hasVariant(variants, "celtics", "celtics"),
                                [sty.itemCarouselItem__manutd__wgtrf93Fzh]:
                                  hasVariant(variants, "manutd", "manutd")
                              }
                            )}
                            image2={
                              <p.PlasmicImg
                                alt={""}
                                className={classNames(sty.img__ndxah, {
                                  [sty.img__cavs__ndxahb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.img__celtics__ndxahXtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.img__manutd__ndxah93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.img__marlins__ndxahwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                })}
                                displayHeight={"312px" as const}
                                displayMaxHeight={"none" as const}
                                displayMaxWidth={"100%" as const}
                                displayMinHeight={"0" as const}
                                displayMinWidth={"0" as const}
                                displayWidth={"100%" as const}
                                loading={"lazy" as const}
                                src={
                                  hasVariant(variants, "marlins", "marlins")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/mattingly1Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "cavs", "cavs")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/okoroJersey1Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "celtics", "celtics")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/jerseySignedBird11Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : hasVariant(variants, "manutd", "manutd")
                                    ? {
                                        src: "/plasmic/copy_of_cardless_com/images/fredJersey11Png.png",
                                        fullWidth: 480,
                                        fullHeight: 480,
                                        aspectRatio: undefined
                                      }
                                    : undefined
                                }
                              />
                            }
                            title={
                              hasVariant(variants, "marlins", "marlins")
                                ? "Autographed Don Mattingly jersey"
                                : hasVariant(variants, "cavs", "cavs")
                                ? "Autographed Isaac Otoro jersey"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "Autographed Larry Bird jersey"
                                : hasVariant(variants, "manutd", "manutd")
                                ? "Autographed Fred Rodrigues de Paula Santos jersey"
                                : "Item 4"
                            }
                          />
                        </React.Fragment>
                      }
                    />
                  </p.Stack>
                </div>

                <PaddingWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.paddingWrapper__twPsg
                  )}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"content"}
                    data-plasmic-override={overrides.content}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.content)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__wi6KR,
                        {
                          [sty.text__manutd__wi6KR93Fzh]: hasVariant(
                            variants,
                            "manutd",
                            "manutd"
                          )
                        }
                      )}
                    >
                      {"Or redeem for cash or credit"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"columns"}
                      data-plasmic-override={overrides.columns}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.columns)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__pfFsB
                        )}
                      >
                        <BenefitCallOut
                          className={classNames(
                            "__wab_instance",
                            sty.benefitCallOut__vnwHl,
                            {
                              [sty.benefitCallOut__manutd__vnwHl93Fzh]:
                                hasVariant(variants, "manutd", "manutd")
                            }
                          )}
                          subtitle={
                            hasVariant(variants, "manutd", "manutd")
                              ? "1 point is 1.25 cents"
                              : "1 point is 1.25 cents"
                          }
                        >
                          <p.PlasmicIcon
                            PlasmicIconType={
                              hasVariant(variants, "marlins", "marlins")
                                ? GiftcardWeb48Svg4Icon
                                : hasVariant(variants, "cavs", "cavs")
                                ? GiftcardWeb48Svg3Icon
                                : hasVariant(variants, "celtics", "celtics")
                                ? GiftcardWeb48Svg2Icon
                                : hasVariant(variants, "manutd", "manutd")
                                ? GiftcardWeb48SvgIcon
                                : "div"
                            }
                            className={classNames(
                              projectcss.all,
                              sty.svg__ljTj9,
                              {
                                [sty.svg__cavs__ljTj9B5Eyw]: hasVariant(
                                  variants,
                                  "cavs",
                                  "cavs"
                                ),
                                [sty.svg__celtics__ljTj9XtUvd]: hasVariant(
                                  variants,
                                  "celtics",
                                  "celtics"
                                ),
                                [sty.svg__manutd__ljTj993Fzh]: hasVariant(
                                  variants,
                                  "manutd",
                                  "manutd"
                                ),
                                [sty.svg__marlins__ljTj9WDlkI]: hasVariant(
                                  variants,
                                  "marlins",
                                  "marlins"
                                )
                              }
                            )}
                            role={"img"}
                          />
                        </BenefitCallOut>
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__zZiUu
                        )}
                      >
                        <BenefitCallOut
                          className={classNames(
                            "__wab_instance",
                            sty.benefitCallOut__wtciJ
                          )}
                          subtitle={"1 point is 1 cent"}
                          title={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__bUg3B
                              )}
                            >
                              {"Statement Credits"}
                            </div>
                          }
                        >
                          <p.PlasmicIcon
                            PlasmicIconType={
                              hasVariant(variants, "marlins", "marlins")
                                ? CashWeb48Svg4Icon
                                : hasVariant(variants, "cavs", "cavs")
                                ? CashWeb48Svg3Icon
                                : hasVariant(variants, "celtics", "celtics")
                                ? CashWeb48Svg2Icon
                                : hasVariant(variants, "manutd", "manutd")
                                ? CashWeb48SvgIcon
                                : "div"
                            }
                            className={classNames(
                              projectcss.all,
                              sty.svg__t4Du,
                              {
                                [sty.svg__cavs__t4Dub5Eyw]: hasVariant(
                                  variants,
                                  "cavs",
                                  "cavs"
                                ),
                                [sty.svg__celtics__t4DuXtUvd]: hasVariant(
                                  variants,
                                  "celtics",
                                  "celtics"
                                ),
                                [sty.svg__manutd__t4Du93Fzh]: hasVariant(
                                  variants,
                                  "manutd",
                                  "manutd"
                                ),
                                [sty.svg__marlins__t4DuwDlkI]: hasVariant(
                                  variants,
                                  "marlins",
                                  "marlins"
                                )
                              }
                            )}
                            role={"img"}
                          />
                        </BenefitCallOut>
                      </div>

                      {(
                        hasVariant(variants, "marlins", "marlins") ? true : true
                      ) ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.column__vybzK,
                            {
                              [sty.column__marlins__vybzKwDlkI]: hasVariant(
                                variants,
                                "marlins",
                                "marlins"
                              )
                            }
                          )}
                        >
                          {(
                            hasVariant(variants, "marlins", "marlins")
                              ? true
                              : hasVariant(variants, "celtics", "celtics")
                              ? true
                              : hasVariant(variants, "manutd", "manutd")
                              ? true
                              : true
                          ) ? (
                            <BenefitCallOut
                              className={classNames(
                                "__wab_instance",
                                sty.benefitCallOut__aEyPs,
                                {
                                  [sty.benefitCallOut__celtics__aEyPsXtUvd]:
                                    hasVariant(variants, "celtics", "celtics"),
                                  [sty.benefitCallOut__manutd__aEyPs93Fzh]:
                                    hasVariant(variants, "manutd", "manutd"),
                                  [sty.benefitCallOut__marlins__aEyPswDlkI]:
                                    hasVariant(variants, "marlins", "marlins")
                                }
                              )}
                              subtitle={"1 point is 1 cent"}
                              title={
                                <div
                                  className={classNames(
                                    projectcss.all,
                                    projectcss.__wab_text,
                                    sty.text___6GfSj,
                                    {
                                      [sty.text__cavs___6GfSJb5Eyw]: hasVariant(
                                        variants,
                                        "cavs",
                                        "cavs"
                                      )
                                    }
                                  )}
                                >
                                  {hasVariant(variants, "cavs", "cavs")
                                    ? "Donation to Cavaliers Community Foundation"
                                    : "Donation to charity"}
                                </div>
                              }
                            >
                              <p.PlasmicIcon
                                PlasmicIconType={
                                  hasVariant(variants, "marlins", "marlins")
                                    ? DonateWeb48Svg4Icon
                                    : hasVariant(variants, "cavs", "cavs")
                                    ? DonateWeb48Svg3Icon
                                    : hasVariant(variants, "celtics", "celtics")
                                    ? DonateWeb48Svg2Icon
                                    : hasVariant(variants, "manutd", "manutd")
                                    ? DonateWeb48SvgIcon
                                    : "div"
                                }
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ykpNj,
                                  {
                                    [sty.svg__cavs__ykpNjb5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    ),
                                    [sty.svg__celtics__ykpNjXtUvd]: hasVariant(
                                      variants,
                                      "celtics",
                                      "celtics"
                                    ),
                                    [sty.svg__manutd__ykpNj93Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    ),
                                    [sty.svg__marlins__ykpNjwDlkI]: hasVariant(
                                      variants,
                                      "marlins",
                                      "marlins"
                                    )
                                  }
                                )}
                                role={"img"}
                              />
                            </BenefitCallOut>
                          ) : null}
                        </div>
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column___89Lz9
                        )}
                      >
                        {(
                          hasVariant(variants, "cavs", "cavs")
                            ? true
                            : hasVariant(variants, "celtics", "celtics")
                            ? true
                            : hasVariant(variants, "manutd", "manutd")
                            ? true
                            : true
                        ) ? (
                          <BenefitCallOut
                            className={classNames(
                              "__wab_instance",
                              sty.benefitCallOut__gdJ4M,
                              {
                                [sty.benefitCallOut__cavs__gdJ4Mb5Eyw]:
                                  hasVariant(variants, "cavs", "cavs"),
                                [sty.benefitCallOut__celtics__gdJ4MxtUvd]:
                                  hasVariant(variants, "celtics", "celtics"),
                                [sty.benefitCallOut__manutd__gdJ4M93Fzh]:
                                  hasVariant(variants, "manutd", "manutd")
                              }
                            )}
                            subtitle={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__nv1Be,
                                  {
                                    [sty.text__marlins__nv1BEwDlkI]: hasVariant(
                                      variants,
                                      "marlins",
                                      "marlins"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "marlins", "marlins")
                                  ? "10 Cardless points is 1 Home Run Reward point"
                                  : "10 Cardless points is 1 cent"}
                              </div>
                            }
                            title={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__trrzB,
                                  {
                                    [sty.text__marlins__trrzBwDlkI]: hasVariant(
                                      variants,
                                      "marlins",
                                      "marlins"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "marlins", "marlins")
                                  ? "Transfer to Home Run Rewards"
                                  : "Points Transfer"}
                              </div>
                            }
                          >
                            <p.PlasmicIcon
                              PlasmicIconType={
                                hasVariant(variants, "marlins", "marlins")
                                  ? TransferWeb48Svg4Icon
                                  : hasVariant(variants, "cavs", "cavs")
                                  ? TransferWeb48Svg3Icon
                                  : hasVariant(variants, "celtics", "celtics")
                                  ? TransferWeb48Svg2Icon
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? TransferWeb48SvgIcon
                                  : "div"
                              }
                              className={classNames(
                                projectcss.all,
                                sty.svg__itpAv,
                                {
                                  [sty.svg__cavs__itpAVb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.svg__celtics__itpAvxtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.svg__manutd__itpAv93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.svg__marlins__itpAVwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                }
                              )}
                              role={"img"}
                            />
                          </BenefitCallOut>
                        ) : null}
                      </div>
                    </p.Stack>
                  </p.Stack>
                </PaddingWrapper>

                <ImageLeft
                  data-plasmic-name={"imageLeft"}
                  data-plasmic-override={overrides.imageLeft}
                  className={classNames("__wab_instance", sty.imageLeft)}
                  slot={
                    <div
                      data-plasmic-name={"oldTraffordDusk3"}
                      data-plasmic-override={overrides.oldTraffordDusk3}
                      className={classNames(
                        projectcss.all,
                        sty.oldTraffordDusk3,
                        {
                          [sty.oldTraffordDusk3__cavs]: hasVariant(
                            variants,
                            "cavs",
                            "cavs"
                          ),
                          [sty.oldTraffordDusk3__celtics]: hasVariant(
                            variants,
                            "celtics",
                            "celtics"
                          ),
                          [sty.oldTraffordDusk3__manutd]: hasVariant(
                            variants,
                            "manutd",
                            "manutd"
                          ),
                          [sty.oldTraffordDusk3__marlins]: hasVariant(
                            variants,
                            "marlins",
                            "marlins"
                          )
                        }
                      )}
                    />
                  }
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"copy8"}
                    data-plasmic-override={overrides.copy8}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.copy8, {
                      [sty.copy8__manutd]: hasVariant(
                        variants,
                        "manutd",
                        "manutd"
                      ),
                      [sty.copy8__marlins]: hasVariant(
                        variants,
                        "marlins",
                        "marlins"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__viMoa,
                        {
                          [sty.text__cavs__viMoAb5Eyw]: hasVariant(
                            variants,
                            "cavs",
                            "cavs"
                          ),
                          [sty.text__manutd__viMoa93Fzh]: hasVariant(
                            variants,
                            "manutd",
                            "manutd"
                          )
                        }
                      )}
                    >
                      {"Ongoing benefits designed  for fans\nlike you"}
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"rates6"}
                      data-plasmic-override={overrides.rates6}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.rates6, {
                        [sty.rates6__manutd]: hasVariant(
                          variants,
                          "manutd",
                          "manutd"
                        )
                      })}
                    >
                      <p.Stack
                        as={"div"}
                        data-plasmic-name={"earningsCopy9"}
                        data-plasmic-override={overrides.earningsCopy9}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.earningsCopy9,
                          {
                            [sty.earningsCopy9__celtics]: hasVariant(
                              variants,
                              "celtics",
                              "celtics"
                            ),
                            [sty.earningsCopy9__manutd]: hasVariant(
                              variants,
                              "manutd",
                              "manutd"
                            )
                          }
                        )}
                      >
                        <EarningCallout
                          body={
                            hasVariant(variants, "marlins", "marlins")
                              ? "Redeem for game tickets, memorabilia and Marlins merchandise "
                              : hasVariant(variants, "cavs", "cavs")
                              ? "Redeem for game tickets, signed items, and more"
                              : hasVariant(variants, "celtics", "celtics")
                              ? "Redeem for game tickets, signed items and more*"
                              : hasVariant(variants, "manutd", "manutd")
                              ? "Receive a free Peacock Premium subscription after $500 in monthly spend*"
                              : "After $500 in monthly spend* receive a free Peacock Premium subscription"
                          }
                          className={classNames(
                            "__wab_instance",
                            sty.earningCallout__fy1S9,
                            {
                              [sty.earningCallout__cavs__fy1S9B5Eyw]:
                                hasVariant(variants, "cavs", "cavs"),
                              [sty.earningCallout__celtics__fy1S9XtUvd]:
                                hasVariant(variants, "celtics", "celtics"),
                              [sty.earningCallout__marlins__fy1S9WDlkI]:
                                hasVariant(variants, "marlins", "marlins")
                            }
                          )}
                          title={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___1D8Z,
                                {
                                  [sty.text__cavs___1D8Zb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.text__celtics___1D8ZXtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.text__manutd___1D8Z93Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.text__marlins___1D8ZwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                }
                              )}
                            >
                              {hasVariant(variants, "marlins", "marlins")
                                ? "Special rewards"
                                : hasVariant(variants, "cavs", "cavs")
                                ? "Exclusive rewards"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "Exclusive rewards "
                                : "Free streaming"}
                            </div>
                          }
                        />

                        <EarningCallout
                          body={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__lyFdP,
                                {
                                  [sty.text__cavs__lyFdPb5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.text__celtics__lyFdPxtUvd]: hasVariant(
                                    variants,
                                    "celtics",
                                    "celtics"
                                  ),
                                  [sty.text__marlins__lyFdPwDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                }
                              )}
                            >
                              {hasVariant(variants, "marlins", "marlins")
                                ? "Be the first to have access to new merchandise and more"
                                : hasVariant(variants, "cavs", "cavs")
                                ? "Save on memorabilia and other fan favorites at the Cavaliers Team Shop*"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "Save on memorabilia and other fan favorites at the online Celtics shop*"
                                : "At The Official Manchester United Megastore, Red Cafe, and United Direct*"}
                            </div>
                          }
                          className={classNames(
                            "__wab_instance",
                            sty.earningCallout__bgw7Z,
                            {
                              [sty.earningCallout__cavs__bgw7Zb5Eyw]:
                                hasVariant(variants, "cavs", "cavs"),
                              [sty.earningCallout__celtics__bgw7ZxtUvd]:
                                hasVariant(variants, "celtics", "celtics"),
                              [sty.earningCallout__manutd__bgw7Z93Fzh]:
                                hasVariant(variants, "manutd", "manutd"),
                              [sty.earningCallout__marlins__bgw7ZwDlkI]:
                                hasVariant(variants, "marlins", "marlins")
                            }
                          )}
                          title={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__erv16,
                                {
                                  [sty.text__cavs__erv16B5Eyw]: hasVariant(
                                    variants,
                                    "cavs",
                                    "cavs"
                                  ),
                                  [sty.text__manutd__erv1693Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  ),
                                  [sty.text__marlins__erv16WDlkI]: hasVariant(
                                    variants,
                                    "marlins",
                                    "marlins"
                                  )
                                }
                              )}
                            >
                              {hasVariant(variants, "marlins", "marlins")
                                ? "Early access"
                                : hasVariant(variants, "cavs", "cavs")
                                ? "10% off purchases"
                                : "10% off purchases"}
                            </div>
                          }
                        />
                      </p.Stack>

                      {(
                        hasVariant(variants, "manutd", "manutd") ? true : false
                      ) ? (
                        <p.Stack
                          as={"div"}
                          data-plasmic-name={"earningsCopy10"}
                          data-plasmic-override={overrides.earningsCopy10}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.earningsCopy10,
                            {
                              [sty.earningsCopy10__celtics]: hasVariant(
                                variants,
                                "celtics",
                                "celtics"
                              ),
                              [sty.earningsCopy10__manutd]: hasVariant(
                                variants,
                                "manutd",
                                "manutd"
                              )
                            }
                          )}
                        >
                          <EarningCallout
                            body={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___1AnoC,
                                  {
                                    [sty.text__cavs___1AnoCb5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    ),
                                    [sty.text__celtics___1AnoCxtUvd]:
                                      hasVariant(
                                        variants,
                                        "celtics",
                                        "celtics"
                                      ),
                                    [sty.text__manutd___1AnoC93Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    ),
                                    [sty.text__marlins___1AnoCwDlkI]:
                                      hasVariant(variants, "marlins", "marlins")
                                  }
                                )}
                              >
                                {hasVariant(variants, "marlins", "marlins")
                                  ? "Be the first to have access to new merchandise and more"
                                  : hasVariant(variants, "cavs", "cavs")
                                  ? "Save on memorabilia and other fan favorites at the Cavaliers Team Shop*"
                                  : hasVariant(variants, "celtics", "celtics")
                                  ? "Save on memorabilia and other fan favorites at the online Celtics shop*"
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? "You’ll have early access to season tickets, new team gear and more*"
                                  : "At The Official Manchester United Megastore, Red Cafe, and United Direct*"}
                              </div>
                            }
                            className={classNames(
                              "__wab_instance",
                              sty.earningCallout__npdkZ,
                              {
                                [sty.earningCallout__cavs__npdkZb5Eyw]:
                                  hasVariant(variants, "cavs", "cavs"),
                                [sty.earningCallout__celtics__npdkZxtUvd]:
                                  hasVariant(variants, "celtics", "celtics"),
                                [sty.earningCallout__manutd__npdkZ93Fzh]:
                                  hasVariant(variants, "manutd", "manutd"),
                                [sty.earningCallout__marlins__npdkZwDlkI]:
                                  hasVariant(variants, "marlins", "marlins")
                              }
                            )}
                            title={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__i10DF,
                                  {
                                    [sty.text__cavs__i10DFb5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    ),
                                    [sty.text__manutd__i10DF93Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    ),
                                    [sty.text__marlins__i10DFwDlkI]: hasVariant(
                                      variants,
                                      "marlins",
                                      "marlins"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "marlins", "marlins")
                                  ? "Early access"
                                  : hasVariant(variants, "cavs", "cavs")
                                  ? "10% off purchases"
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? "Special access"
                                  : "10% off purchases"}
                              </div>
                            }
                          />

                          <EarningCallout
                            body={
                              hasVariant(variants, "marlins", "marlins")
                                ? "Redeem for game tickets, memorabilia and Marlins merchandise "
                                : hasVariant(variants, "cavs", "cavs")
                                ? "Redeem for game tickets, signed items, and more"
                                : hasVariant(variants, "celtics", "celtics")
                                ? "Redeem for game tickets, signed items and more"
                                : hasVariant(variants, "manutd", "manutd")
                                ? "Redeem points for match tickets, merchandise and access to special events*"
                                : "After $500 in monthly spend* receive a free Peacock Premium subscription"
                            }
                            className={classNames(
                              "__wab_instance",
                              sty.earningCallout__mGvGk,
                              {
                                [sty.earningCallout__cavs__mGvGkb5Eyw]:
                                  hasVariant(variants, "cavs", "cavs"),
                                [sty.earningCallout__celtics__mGvGkXtUvd]:
                                  hasVariant(variants, "celtics", "celtics"),
                                [sty.earningCallout__marlins__mGvGkwDlkI]:
                                  hasVariant(variants, "marlins", "marlins")
                              }
                            )}
                            title={
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__vuVo,
                                  {
                                    [sty.text__cavs__vuVoB5Eyw]: hasVariant(
                                      variants,
                                      "cavs",
                                      "cavs"
                                    ),
                                    [sty.text__celtics__vuVoXtUvd]: hasVariant(
                                      variants,
                                      "celtics",
                                      "celtics"
                                    ),
                                    [sty.text__manutd__vuVo93Fzh]: hasVariant(
                                      variants,
                                      "manutd",
                                      "manutd"
                                    ),
                                    [sty.text__marlins__vuVoWDlkI]: hasVariant(
                                      variants,
                                      "marlins",
                                      "marlins"
                                    )
                                  }
                                )}
                              >
                                {hasVariant(variants, "marlins", "marlins")
                                  ? "Special rewards"
                                  : hasVariant(variants, "cavs", "cavs")
                                  ? "Exclusive rewards"
                                  : hasVariant(variants, "celtics", "celtics")
                                  ? "Exclusive rewards "
                                  : hasVariant(variants, "manutd", "manutd")
                                  ? "Exclusive rewards"
                                  : "Free streaming"}
                              </div>
                            }
                          />
                        </p.Stack>
                      ) : null}
                    </p.Stack>

                    {(
                      hasVariant(variants, "manutd", "manutd") ? true : true
                    ) ? (
                      <OfferTerms
                        data-plasmic-name={"offer8"}
                        data-plasmic-override={overrides.offer8}
                        asterisk={
                          hasVariant(variants, "manutd", "manutd")
                            ? ("asterisk" as const)
                            : ("asterisk" as const)
                        }
                        children2={
                          true ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___2SRi7,
                                {
                                  [sty.text__manutd___2SRi793Fzh]: hasVariant(
                                    variants,
                                    "manutd",
                                    "manutd"
                                  )
                                }
                              )}
                            >
                              {hasVariant(variants, "manutd", "manutd")
                                ? "*Subject to availability. See "
                                : "*subject to availability. See "}
                            </div>
                          ) : null
                        }
                        className={classNames("__wab_instance", sty.offer8, {
                          [sty.offer8__manutd]: hasVariant(
                            variants,
                            "manutd",
                            "manutd"
                          )
                        })}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vI8Nn,
                            "offerTermsModal" as const,
                            {
                              [sty.text__manutd__vI8Nn93Fzh]: hasVariant(
                                variants,
                                "manutd",
                                "manutd"
                              )
                            }
                          )}
                        >
                          {hasVariant(variants, "manutd", "manutd")
                            ? "Offer Terms"
                            : "Offer Terms"}
                        </div>
                      </OfferTerms>
                    ) : null}
                  </p.Stack>
                </ImageLeft>
              </p.Stack>
            ) : null}

            <MobileAppMock
              data-plasmic-name={"mobileAppMock"}
              data-plasmic-override={overrides.mobileAppMock}
              className={classNames("__wab_instance", sty.mobileAppMock, {
                [sty.mobileAppMock__cavs]: hasVariant(variants, "cavs", "cavs"),
                [sty.mobileAppMock__celtics]: hasVariant(
                  variants,
                  "celtics",
                  "celtics"
                ),
                [sty.mobileAppMock__manutd]: hasVariant(
                  variants,
                  "manutd",
                  "manutd"
                )
              })}
              header4={
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rhq11,
                    {
                      [sty.text__cavs__rhq11B5Eyw]: hasVariant(
                        variants,
                        "cavs",
                        "cavs"
                      ),
                      [sty.text__celtics__rhq11XtUvd]: hasVariant(
                        variants,
                        "celtics",
                        "celtics"
                      ),
                      [sty.text__manutd__rhq1193Fzh]: hasVariant(
                        variants,
                        "manutd",
                        "manutd"
                      ),
                      [sty.text__marlins__rhq11WDlkI]: hasVariant(
                        variants,
                        "marlins",
                        "marlins"
                      )
                    }
                  )}
                >
                  {hasVariant(variants, "marlins", "marlins")
                    ? "Miami Marlins has partnered with Cardless to offer a card designed \naround you"
                    : hasVariant(variants, "cavs", "cavs")
                    ? "Cleveland Cavaliers has partnered with Cardless to offer a card designed around you"
                    : hasVariant(variants, "celtics", "celtics")
                    ? "Boston Celtics has partnered with Cardless to offer a card designed around you"
                    : hasVariant(variants, "manutd", "manutd")
                    ? "Manchester United has partnered with Cardless to offer a card designed around you"
                    : "Heading Label"}
                </div>
              }
              id={"about" as const}
              products={
                hasVariant(globalVariants, "screen", "tabletSmall")
                  ? undefined
                  : ("cardVisible" as const)
              }
              slot={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__gQpc4, {
                    [sty.img__cavs__gQpc4B5Eyw]: hasVariant(
                      variants,
                      "cavs",
                      "cavs"
                    ),
                    [sty.img__celtics__gQpc4XtUvd]: hasVariant(
                      variants,
                      "celtics",
                      "celtics"
                    ),
                    [sty.img__manutd__gQpc493Fzh]: hasVariant(
                      variants,
                      "manutd",
                      "manutd"
                    ),
                    [sty.img__marlins__gQpc4WDlkI]: hasVariant(
                      variants,
                      "marlins",
                      "marlins"
                    )
                  })}
                  displayHeight={
                    hasVariant(variants, "celtics", "celtics")
                      ? ("100%" as const)
                      : ("100%" as const)
                  }
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={
                    hasVariant(variants, "celtics", "celtics")
                      ? ("100%" as const)
                      : ("100%" as const)
                  }
                  loading={"lazy" as const}
                  src={
                    hasVariant(variants, "marlins", "marlins")
                      ? {
                          src: "/plasmic/copy_of_cardless_com/images/marlinsCard2.png",
                          fullWidth: 2048,
                          fullHeight: 1292,
                          aspectRatio: undefined
                        }
                      : hasVariant(variants, "cavs", "cavs")
                      ? {
                          src: "/plasmic/copy_of_cardless_com/images/cavsCard.png",
                          fullWidth: 2048,
                          fullHeight: 1292,
                          aspectRatio: undefined
                        }
                      : hasVariant(variants, "celtics", "celtics")
                      ? {
                          src: "/plasmic/copy_of_cardless_com/images/celticsCard22.png",
                          fullWidth: 2048,
                          fullHeight: 1292,
                          aspectRatio: undefined
                        }
                      : {
                          src: "/plasmic/copy_of_cardless_com/images/manuCard2.png",
                          fullWidth: 2048,
                          fullHeight: 1292,
                          aspectRatio: undefined
                        }
                  }
                />
              }
              slot2={
                <p.PlasmicImg
                  alt={""}
                  className={classNames(sty.img__xc4Cv, {
                    [sty.img__cavs__xc4Cvb5Eyw]: hasVariant(
                      variants,
                      "cavs",
                      "cavs"
                    ),
                    [sty.img__celtics__xc4CvXtUvd]: hasVariant(
                      variants,
                      "celtics",
                      "celtics"
                    ),
                    [sty.img__manutd__xc4Cv93Fzh]: hasVariant(
                      variants,
                      "manutd",
                      "manutd"
                    ),
                    [sty.img__marlins__xc4CvwDlkI]: hasVariant(
                      variants,
                      "marlins",
                      "marlins"
                    )
                  })}
                  displayHeight={"477.186px" as const}
                  displayMaxHeight={"none" as const}
                  displayMaxWidth={"100%" as const}
                  displayMinHeight={"0" as const}
                  displayMinWidth={"0" as const}
                  displayWidth={"220.292px" as const}
                  loading={"lazy" as const}
                  src={
                    hasVariant(variants, "marlins", "marlins")
                      ? {
                          src: "/plasmic/copy_of_cardless_com/images/oldUiMarlinspng.png",
                          fullWidth: 750,
                          fullHeight: 1624,
                          aspectRatio: undefined
                        }
                      : hasVariant(variants, "cavs", "cavs") &&
                        hasVariant(globalVariants, "screen", "tabletSmall")
                      ? {
                          src: "/plasmic/copy_of_cardless_com/images/oldUiCavspng2.png",
                          fullWidth: 750,
                          fullHeight: 1624,
                          aspectRatio: undefined
                        }
                      : hasVariant(variants, "cavs", "cavs")
                      ? {
                          src: "/plasmic/copy_of_cardless_com/images/homeCavspng.png",
                          fullWidth: 750,
                          fullHeight: 1624,
                          aspectRatio: undefined
                        }
                      : hasVariant(variants, "celtics", "celtics")
                      ? {
                          src: "/plasmic/copy_of_cardless_com/images/oldUiCelticspng2.png",
                          fullWidth: 750,
                          fullHeight: 1624,
                          aspectRatio: undefined
                        }
                      : hasVariant(variants, "manutd", "manutd") &&
                        hasVariant(globalVariants, "screen", "tablet")
                      ? {
                          src: "/plasmic/copy_of_cardless_com/images/oldUiManutdpng2.png",
                          fullWidth: 750,
                          fullHeight: 1624,
                          aspectRatio: undefined
                        }
                      : hasVariant(variants, "manutd", "manutd")
                      ? {
                          src: "/plasmic/copy_of_cardless_com/images/homeManUtdpng.png",
                          fullWidth: 750,
                          fullHeight: 1624,
                          aspectRatio: undefined
                        }
                      : {
                          src: "/plasmic/copy_of_cardless_com/images/homeMarlinspng.png",
                          fullWidth: 750,
                          fullHeight: 1624,
                          aspectRatio: undefined
                        }
                  }
                />
              }
            >
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__cNc6U, {
                  [sty.img__cavs__cNc6Ub5Eyw]: hasVariant(
                    variants,
                    "cavs",
                    "cavs"
                  ),
                  [sty.img__celtics__cNc6UXtUvd]: hasVariant(
                    variants,
                    "celtics",
                    "celtics"
                  ),
                  [sty.img__manutd__cNc6U93Fzh]: hasVariant(
                    variants,
                    "manutd",
                    "manutd"
                  ),
                  [sty.img__marlins__cNc6UwDlkI]: hasVariant(
                    variants,
                    "marlins",
                    "marlins"
                  )
                })}
                displayHeight={"477.171px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"220.285px" as const}
                loading={"lazy" as const}
                src={
                  hasVariant(variants, "marlins", "marlins")
                    ? {
                        src: "/plasmic/copy_of_cardless_com/images/oldUiMarlinspng.png",
                        fullWidth: 750,
                        fullHeight: 1624,
                        aspectRatio: undefined
                      }
                    : hasVariant(variants, "cavs", "cavs")
                    ? {
                        src: "/plasmic/copy_of_cardless_com/images/oldUiCavspng2.png",
                        fullWidth: 750,
                        fullHeight: 1624,
                        aspectRatio: undefined
                      }
                    : hasVariant(variants, "celtics", "celtics")
                    ? {
                        src: "/plasmic/copy_of_cardless_com/images/oldUiCelticspng2.png",
                        fullWidth: 750,
                        fullHeight: 1624,
                        aspectRatio: undefined
                      }
                    : hasVariant(variants, "manutd", "manutd")
                    ? {
                        src: "/plasmic/copy_of_cardless_com/images/oldUiManutdpng2.png",
                        fullWidth: 750,
                        fullHeight: 1624,
                        aspectRatio: undefined
                      }
                    : {
                        src: "/plasmic/copy_of_cardless_com/images/iphone12ProScreen.svg",
                        fullWidth: 220.285,
                        fullHeight: 477.171,
                        aspectRatio: 0.462343
                      }
                }
              />
            </MobileAppMock>

            <p.Stack
              as={"div"}
              data-plasmic-name={"wrapper"}
              data-plasmic-override={overrides.wrapper}
              hasGap={true}
              className={classNames(projectcss.all, sty.wrapper, {
                [sty.wrapper__cavs]: hasVariant(variants, "cavs", "cavs")
              })}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"copyCta"}
                data-plasmic-override={overrides.copyCta}
                hasGap={true}
                className={classNames(projectcss.all, sty.copyCta)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"copy11"}
                  data-plasmic-override={overrides.copy11}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.copy11, {
                    [sty.copy11__cavs]: hasVariant(variants, "cavs", "cavs")
                  })}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___2H6Q, {
                      [sty.freeBox__cavs___2H6Qb5Eyw]: hasVariant(
                        variants,
                        "cavs",
                        "cavs"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___5GiOp
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__tzw3D,
                          {
                            [sty.text__cavs__tzw3Db5Eyw]: hasVariant(
                              variants,
                              "cavs",
                              "cavs"
                            ),
                            [sty.text__celtics__tzw3DXtUvd]: hasVariant(
                              variants,
                              "celtics",
                              "celtics"
                            ),
                            [sty.text__manutd__tzw3D93Fzh]: hasVariant(
                              variants,
                              "manutd",
                              "manutd"
                            ),
                            [sty.text__marlins__tzw3DwDlkI]: hasVariant(
                              variants,
                              "marlins",
                              "marlins"
                            )
                          }
                        )}
                      >
                        {hasVariant(variants, "cavs", "cavs")
                          ? "Earn 10,000 points"
                          : "Earn 10,000 points for every friend who joins you"}
                      </div>
                    </div>

                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"subheadingWrapper"}
                      data-plasmic-override={overrides.subheadingWrapper}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.subheadingWrapper
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ossFw,
                          {
                            [sty.text__manutd__ossFw93Fzh]: hasVariant(
                              variants,
                              "manutd",
                              "manutd"
                            )
                          }
                        )}
                      >
                        {hasVariant(variants, "manutd", "manutd")
                          ? "Refer a friend! If they’re approved, you’ll get rewarded*"
                          : "Refer a friend! If they’re approved, you’ll get rewarded*"}
                      </div>
                    </p.Stack>
                  </p.Stack>

                  <OfferTerms
                    data-plasmic-name={"offer"}
                    data-plasmic-override={overrides.offer}
                    asterisk={
                      hasVariant(variants, "manutd", "manutd")
                        ? ("asterisk" as const)
                        : ("asterisk" as const)
                    }
                    className={classNames("__wab_instance", sty.offer, {
                      [sty.offer__manutd]: hasVariant(
                        variants,
                        "manutd",
                        "manutd"
                      )
                    })}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fJsft,
                        "offerTermsModal" as const,
                        {
                          [sty.text__manutd__fJsft93Fzh]: hasVariant(
                            variants,
                            "manutd",
                            "manutd"
                          )
                        }
                      )}
                    >
                      {"Offer Terms"}
                    </div>
                  </OfferTerms>
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <p.Stack
              as={"div"}
              data-plasmic-name={"cta"}
              data-plasmic-override={overrides.cta}
              hasGap={true}
              className={classNames(projectcss.all, sty.cta, {
                [sty.cta__cavs]: hasVariant(variants, "cavs", "cavs"),
                [sty.cta__celtics]: hasVariant(variants, "celtics", "celtics"),
                [sty.cta__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                  hasVariant(variants, "celtics", "celtics") &&
                  hasVariant(
                    globalVariants,
                    "unnamedGlobalGroupOfVariants",
                    "unnamedVariant"
                  ),
                [sty.cta__manutd]: hasVariant(variants, "manutd", "manutd"),
                [sty.cta__marlins]: hasVariant(variants, "marlins", "marlins")
              })}
            >
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__zFum1, {
                  [sty.freeBox__cavs__zFum1B5Eyw]: hasVariant(
                    variants,
                    "cavs",
                    "cavs"
                  )
                })}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kd2Ue,
                    {
                      [sty.text__cavs__kd2Ueb5Eyw]: hasVariant(
                        variants,
                        "cavs",
                        "cavs"
                      ),
                      [sty.text__celtics__kd2UeXtUvd]: hasVariant(
                        variants,
                        "celtics",
                        "celtics"
                      ),
                      [sty.text__manutd__kd2Ue93Fzh]: hasVariant(
                        variants,
                        "manutd",
                        "manutd"
                      ),
                      [sty.text__marlins__kd2UewDlkI]: hasVariant(
                        variants,
                        "marlins",
                        "marlins"
                      )
                    }
                  )}
                >
                  {hasVariant(variants, "marlins", "marlins")
                    ? "The Miami Marlins in \nyour wallet"
                    : hasVariant(variants, "cavs", "cavs")
                    ? "Believeland in your pocket"
                    : hasVariant(variants, "celtics", "celtics")
                    ? "Put a little green in\n your wallet"
                    : hasVariant(variants, "manutd", "manutd")
                    ? "Glory, Glory, Man Utd — in your wallet"
                    : "Hellon2"}
                </div>

                <div className={classNames(projectcss.all, sty.freeBox__qhEn9)}>
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"benefitsRow6"}
                    data-plasmic-override={overrides.benefitsRow6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.benefitsRow6, {
                      [sty.benefitsRow6__cavs]: hasVariant(
                        variants,
                        "cavs",
                        "cavs"
                      ),
                      [sty.benefitsRow6__celtics]: hasVariant(
                        variants,
                        "celtics",
                        "celtics"
                      )
                    })}
                  >
                    <PriceCallout
                      caption={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___0Cey7,
                            {
                              [sty.text__manutd___0Cey793Fzh]: hasVariant(
                                variants,
                                "manutd",
                                "manutd"
                              )
                            }
                          )}
                        >
                          {"Annual fee"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.priceCallout___65Nt
                      )}
                      cost={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__kfT5C
                          )}
                        >
                          {"$0"}
                        </div>
                      }
                    />

                    <PriceCallout
                      caption={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___6SCd7
                          )}
                        >
                          {"Late fee"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.priceCallout__deApt
                      )}
                      cost={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___71G5X
                          )}
                        >
                          {"$0"}
                        </div>
                      }
                    />

                    <PriceCallout
                      caption={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___7Cymn
                          )}
                        >
                          {"Foreign transaction fee"}
                        </div>
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.priceCallout__xDtuQ
                      )}
                      cost={
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__bRXfD
                          )}
                        >
                          {"$0"}
                        </div>
                      }
                    />
                  </p.Stack>
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___1YhvE)}
                >
                  <p.PlasmicLink
                    data-plasmic-name={"pill6"}
                    data-plasmic-override={overrides.pill6}
                    className={classNames(projectcss.a, sty.pill6, {
                      [sty.pill6__cavs]: hasVariant(variants, "cavs", "cavs"),
                      [sty.pill6__celtics]: hasVariant(
                        variants,
                        "celtics",
                        "celtics"
                      ),
                      [sty.pill6__manutd]: hasVariant(
                        variants,
                        "manutd",
                        "manutd"
                      ),
                      [sty.pill6__marlins]: hasVariant(
                        variants,
                        "marlins",
                        "marlins"
                      )
                    })}
                    component={Link}
                    href={
                      hasVariant(variants, "marlins", "marlins")
                        ? ("/apply/marlins" as const)
                        : hasVariant(variants, "cavs", "cavs")
                        ? ("/apply/cavs" as const)
                        : hasVariant(variants, "celtics", "celtics")
                        ? ("/apply/celtics" as const)
                        : hasVariant(variants, "manutd", "manutd")
                        ? ("/apply/manutd" as const)
                        : ("/apply" as const)
                    }
                    platform={"nextjs"}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__v4XWy,
                        {
                          [sty.text__cavs__v4XWYb5Eyw]: hasVariant(
                            variants,
                            "cavs",
                            "cavs"
                          ),
                          [sty.text__celtics__v4XWyxtUvd]: hasVariant(
                            variants,
                            "celtics",
                            "celtics"
                          ),
                          [sty.text__manutd__v4XWy93Fzh]: hasVariant(
                            variants,
                            "manutd",
                            "manutd"
                          ),
                          [sty.text__marlins__v4XWYwDlkI]: hasVariant(
                            variants,
                            "marlins",
                            "marlins"
                          )
                        }
                      )}
                    >
                      {"Apply now"}
                    </div>
                  </p.PlasmicLink>

                  <OfferTerms
                    data-plasmic-name={"ratesTerms"}
                    data-plasmic-override={overrides.ratesTerms}
                    className={classNames("__wab_instance", sty.ratesTerms)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__n5HJi
                      )}
                    >
                      {"Rates & Fees"}
                    </div>
                  </OfferTerms>
                </p.Stack>
              </p.Stack>
            </p.Stack>

            <Footer
              data-plasmic-name={"footer"}
              data-plasmic-override={overrides.footer}
              className={classNames("__wab_instance", sty.footer, {
                [sty.footer__cavs]: hasVariant(variants, "cavs", "cavs"),
                [sty.footer__celtics_global_unnamedGlobalGroupOfVariants_unnamedVariant]:
                  hasVariant(variants, "celtics", "celtics") &&
                  hasVariant(
                    globalVariants,
                    "unnamedGlobalGroupOfVariants",
                    "unnamedVariant"
                  ),
                [sty.footer__manutd]: hasVariant(variants, "manutd", "manutd")
              })}
            />

            {(hasVariant(globalVariants, "screen", "laptop") ? true : true) ? (
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__fa0Z3)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"auto" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/copy_of_cardless_com/images/image19.png",
                  fullWidth: 2400,
                  fullHeight: 2400,
                  aspectRatio: undefined
                }}
              />
            ) : null}
            {(
              hasVariant(globalVariants, "screen", "tabletSmall")
                ? true
                : hasVariant(globalVariants, "screen", "laptop")
                ? true
                : false
            ) ? (
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__fAGe)}
                displayHeight={"auto" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={
                  hasVariant(globalVariants, "screen", "tabletSmall")
                    ? ("529px" as const)
                    : ("838px" as const)
                }
                displayMinWidth={"0" as const}
                displayWidth={
                  hasVariant(globalVariants, "screen", "tabletSmall")
                    ? ("534px" as const)
                    : hasVariant(globalVariants, "screen", "laptopSmall")
                    ? ("720px" as const)
                    : hasVariant(globalVariants, "screen", "laptop")
                    ? ("960px" as const)
                    : ("1024px" as const)
                }
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/copy_of_cardless_com/images/image19.png",
                  fullWidth: 2400,
                  fullHeight: 2400,
                  aspectRatio: undefined
                }}
              />
            ) : null}
          </div>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "productHero",
    "content2",
    "copy9",
    "coloredHeading",
    "offer2",
    "rates3",
    "hero2",
    "redeemShopSection",
    "copy",
    "coloredHeading2",
    "offer7",
    "itemCarousel",
    "content",
    "columns",
    "imageLeft",
    "oldTraffordDusk3",
    "copy8",
    "rates6",
    "earningsCopy9",
    "earningsCopy10",
    "offer8",
    "mobileAppMock",
    "wrapper",
    "copyCta",
    "copy11",
    "subheadingWrapper",
    "offer",
    "cta",
    "benefitsRow6",
    "pill6",
    "ratesTerms",
    "footer"
  ],
  productHero: ["productHero"],
  content2: ["content2", "copy9", "coloredHeading", "offer2", "rates3"],
  copy9: ["copy9", "coloredHeading", "offer2"],
  coloredHeading: ["coloredHeading"],
  offer2: ["offer2"],
  rates3: ["rates3"],
  hero2: [
    "hero2",
    "redeemShopSection",
    "copy",
    "coloredHeading2",
    "offer7",
    "itemCarousel",
    "content",
    "columns",
    "imageLeft",
    "oldTraffordDusk3",
    "copy8",
    "rates6",
    "earningsCopy9",
    "earningsCopy10",
    "offer8"
  ],
  redeemShopSection: [
    "redeemShopSection",
    "copy",
    "coloredHeading2",
    "offer7",
    "itemCarousel"
  ],
  copy: ["copy", "coloredHeading2", "offer7"],
  coloredHeading2: ["coloredHeading2"],
  offer7: ["offer7"],
  itemCarousel: ["itemCarousel"],
  content: ["content", "columns"],
  columns: ["columns"],
  imageLeft: [
    "imageLeft",
    "oldTraffordDusk3",
    "copy8",
    "rates6",
    "earningsCopy9",
    "earningsCopy10",
    "offer8"
  ],
  oldTraffordDusk3: ["oldTraffordDusk3"],
  copy8: ["copy8", "rates6", "earningsCopy9", "earningsCopy10", "offer8"],
  rates6: ["rates6", "earningsCopy9", "earningsCopy10"],
  earningsCopy9: ["earningsCopy9"],
  earningsCopy10: ["earningsCopy10"],
  offer8: ["offer8"],
  mobileAppMock: ["mobileAppMock"],
  wrapper: ["wrapper", "copyCta", "copy11", "subheadingWrapper", "offer"],
  copyCta: ["copyCta", "copy11", "subheadingWrapper", "offer"],
  copy11: ["copy11", "subheadingWrapper", "offer"],
  subheadingWrapper: ["subheadingWrapper"],
  offer: ["offer"],
  cta: ["cta", "benefitsRow6", "pill6", "ratesTerms"],
  benefitsRow6: ["benefitsRow6"],
  pill6: ["pill6"],
  ratesTerms: ["ratesTerms"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  productHero: typeof ProductHero;
  content2: "div";
  copy9: "div";
  coloredHeading: "div";
  offer2: typeof OfferTerms;
  rates3: "div";
  hero2: "div";
  redeemShopSection: "div";
  copy: "div";
  coloredHeading2: "div";
  offer7: typeof OfferTerms;
  itemCarousel: typeof ItemCarousel;
  content: "div";
  columns: "div";
  imageLeft: typeof ImageLeft;
  oldTraffordDusk3: "div";
  copy8: "div";
  rates6: "div";
  earningsCopy9: "div";
  earningsCopy10: "div";
  offer8: typeof OfferTerms;
  mobileAppMock: typeof MobileAppMock;
  wrapper: "div";
  copyCta: "div";
  copy11: "div";
  subheadingWrapper: "div";
  offer: typeof OfferTerms;
  cta: "div";
  benefitsRow6: "div";
  pill6: "a";
  ratesTerms: typeof OfferTerms;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicCards__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicCards__VariantsArgs;
    args?: PlasmicCards__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicCards__Fetches;
  } & Omit<PlasmicCards__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicCards__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicCards__ArgProps,
      internalVariantPropNames: PlasmicCards__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicCards__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCards";
  } else {
    func.displayName = `PlasmicCards.${nodeName}`;
  }
  return func;
}

export const PlasmicCards = Object.assign(
  // Top-level PlasmicCards renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    productHero: makeNodeComponent("productHero"),
    content2: makeNodeComponent("content2"),
    copy9: makeNodeComponent("copy9"),
    coloredHeading: makeNodeComponent("coloredHeading"),
    offer2: makeNodeComponent("offer2"),
    rates3: makeNodeComponent("rates3"),
    hero2: makeNodeComponent("hero2"),
    redeemShopSection: makeNodeComponent("redeemShopSection"),
    copy: makeNodeComponent("copy"),
    coloredHeading2: makeNodeComponent("coloredHeading2"),
    offer7: makeNodeComponent("offer7"),
    itemCarousel: makeNodeComponent("itemCarousel"),
    content: makeNodeComponent("content"),
    columns: makeNodeComponent("columns"),
    imageLeft: makeNodeComponent("imageLeft"),
    oldTraffordDusk3: makeNodeComponent("oldTraffordDusk3"),
    copy8: makeNodeComponent("copy8"),
    rates6: makeNodeComponent("rates6"),
    earningsCopy9: makeNodeComponent("earningsCopy9"),
    earningsCopy10: makeNodeComponent("earningsCopy10"),
    offer8: makeNodeComponent("offer8"),
    mobileAppMock: makeNodeComponent("mobileAppMock"),
    wrapper: makeNodeComponent("wrapper"),
    copyCta: makeNodeComponent("copyCta"),
    copy11: makeNodeComponent("copy11"),
    subheadingWrapper: makeNodeComponent("subheadingWrapper"),
    offer: makeNodeComponent("offer"),
    cta: makeNodeComponent("cta"),
    benefitsRow6: makeNodeComponent("benefitsRow6"),
    pill6: makeNodeComponent("pill6"),
    ratesTerms: makeNodeComponent("ratesTerms"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicCards
    internalVariantProps: PlasmicCards__VariantProps,
    internalArgProps: PlasmicCards__ArgProps
  }
);

export default PlasmicCards;
/* prettier-ignore-end */
