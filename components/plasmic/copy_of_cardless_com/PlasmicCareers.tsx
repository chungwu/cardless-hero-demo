// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5bwAVSS7yxRyYYekzZSF6R
// Component: HqyOQZAs797T
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { NavBar } from "../../layout/NavBar"; // plasmic-import: VpJrKbBamu0m/codeComponent
import NavButton from "../../NavButton"; // plasmic-import: s0OJmmocqt8k/component
import HeroAvatar from "../../HeroAvatar"; // plasmic-import: PkWTYjvvSSlc/component
import CareersInfoCard from "../../CareersInfoCard"; // plasmic-import: UL0bObsgqj2z/component
import PaddingWrapper from "../../PaddingWrapper"; // plasmic-import: 4i10JAkWDCTW/component
import InlineButton from "../../InlineButton"; // plasmic-import: NqmB3dxSPhdw/component
import BrandLogo from "../../BrandLogo"; // plasmic-import: Ih8CO7qIPWwS/component
import ImageLeft from "../../ImageLeft"; // plasmic-import: i5UR_SxBMe0v/component
import CareersBenefits from "../../CareersBenefits"; // plasmic-import: x0xZtXa4ebGM/component
import CareersTeamSection from "../../CareersTeamSection"; // plasmic-import: akLG14lb0Udy/component
import CareersTeamPosting from "../../CareersTeamPosting"; // plasmic-import: e5FE6Mc6mLjK/component
import Footer from "../../Footer"; // plasmic-import: 4TDmEKfWsWRr/component

import { useScreenVariants as useScreenVariantsbUUiKYc55Zpu } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: bUUiKYc55Zpu/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import * as projectcss from "./plasmic_copy_of_cardless_com.module.css"; // plasmic-import: 5bwAVSS7yxRyYYekzZSF6R/projectcss
import * as sty from "./PlasmicCareers.module.css"; // plasmic-import: HqyOQZAs797T/css

import ArrowRightIcon from "./icons/PlasmicIcon__ArrowRight"; // plasmic-import: E7YdTcD7oFygJ/icon
import SvggIcon from "./icons/PlasmicIcon__Svgg"; // plasmic-import: WnNxzrp8hV_KR/icon
import Svgg2Icon from "./icons/PlasmicIcon__Svgg2"; // plasmic-import: qbDob9wv-Adm1/icon
import Svgg3Icon from "./icons/PlasmicIcon__Svgg3"; // plasmic-import: 2jKbhB66Vr5e-/icon
import PearGrayLogoIcon from "./icons/PlasmicIcon__PearGrayLogo"; // plasmic-import: t6Zlai5b8yAc7/icon
import ClocktowerLogoIcon from "./icons/PlasmicIcon__ClocktowerLogo"; // plasmic-import: yHqTAD7d7md_s/icon

export type PlasmicCareers__VariantMembers = {};

export type PlasmicCareers__VariantsArgs = {};
type VariantPropType = keyof PlasmicCareers__VariantsArgs;
export const PlasmicCareers__VariantProps = new Array<VariantPropType>();

export type PlasmicCareers__ArgsType = {
  allTeamSections?: React.ReactNode;
};

type ArgPropType = keyof PlasmicCareers__ArgsType;
export const PlasmicCareers__ArgProps = new Array<ArgPropType>(
  "allTeamSections"
);

export type PlasmicCareers__OverridesType = {
  root?: p.Flex<"div">;
  hero?: p.Flex<"div">;
  navBarCodeComponent?: p.Flex<typeof NavBar>;
  copyDownloadButtons3?: p.Flex<"div">;
  copy6?: p.Flex<"div">;
  navButton?: p.Flex<typeof NavButton>;
  careersInfoCard?: p.Flex<typeof CareersInfoCard>;
  mobilePhotos?: p.Flex<"div">;
  copyCta2?: p.Flex<"div">;
  copy2?: p.Flex<"div">;
  title?: p.Flex<"div">;
  inlineButton?: p.Flex<typeof InlineButton>;
  brandCallout?: p.Flex<"div">;
  grid?: p.Flex<"div">;
  imageLeft?: p.Flex<typeof ImageLeft>;
  careersBenefits?: p.Flex<typeof CareersBenefits>;
  jobListings?: p.Flex<typeof PaddingWrapper>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultCareersProps {
  dataFetches: PlasmicCareers__Fetches;
}

function PlasmicCareers__RenderFunc(props: {
  variants: PlasmicCareers__VariantsArgs;
  args: PlasmicCareers__ArgsType;
  overrides: PlasmicCareers__OverridesType;
  dataFetches?: PlasmicCareers__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbUUiKYc55Zpu()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{"Cardless | Careers"}</title>
        <meta
          key="og:title"
          property="og:title"
          content={"Cardless | Careers"}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"hero"}
            data-plasmic-override={overrides.hero}
            hasGap={true}
            className={classNames(projectcss.all, sty.hero)}
          >
            <NavBar
              data-plasmic-name={"navBarCodeComponent"}
              data-plasmic-override={overrides.navBarCodeComponent}
              className={classNames("__wab_instance", sty.navBarCodeComponent)}
              noCta={true}
            />

            <div className={classNames(projectcss.all, sty.freeBox__aSTqZ)}>
              <div className={classNames(projectcss.all, sty.freeBox__yk3Jn)}>
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"copyDownloadButtons3"}
                  data-plasmic-override={overrides.copyDownloadButtons3}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.copyDownloadButtons3
                  )}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"copy6"}
                    data-plasmic-override={overrides.copy6}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.copy6)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__niatp
                      )}
                    >
                      {"Help us redefine consumer credit"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hPrP2
                      )}
                    >
                      {
                        "Our mission is to make credit more engaging, rewarding and accessible"
                      }
                    </div>
                  </p.Stack>

                  <NavButton
                    data-plasmic-name={"navButton"}
                    data-plasmic-override={overrides.navButton}
                    className={classNames("__wab_instance", sty.navButton)}
                    destination={"#jobListings" as const}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__d8LbM
                      )}
                    >
                      {"Join the team"}
                    </div>
                  </NavButton>
                </p.Stack>
              </div>

              <div className={classNames(projectcss.all, sty.freeBox__lhRal)}>
                {(
                  hasVariant(globalVariants, "screen", "mobile")
                    ? true
                    : hasVariant(globalVariants, "screen", "tabletSmall")
                    ? true
                    : hasVariant(globalVariants, "screen", "tablet")
                    ? true
                    : hasVariant(globalVariants, "screen", "laptopSmall")
                    ? true
                    : true
                ) ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox__polog)}
                  >
                    <HeroAvatar
                      avatarImage={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__whD2J)}
                          displayHeight={"240px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"160px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/copy_of_cardless_com/images/adamCareersjpg.jpeg",
                            fullWidth: 320,
                            fullHeight: 480,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.heroAvatar__xdhC5
                      )}
                    />

                    <HeroAvatar
                      avatarImage={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__zu7Mu)}
                          displayHeight={"240px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"160px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/copy_of_cardless_com/images/christinaCareersjpg2.jpeg",
                            fullWidth: 320,
                            fullHeight: 480,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.heroAvatar__bu37
                      )}
                    />

                    <HeroAvatar
                      avatarImage={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___4GRnu)}
                          displayHeight={"240px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"160px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/copy_of_cardless_com/images/sarahCareersjpg2.jpeg",
                            fullWidth: 320,
                            fullHeight: 480,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      className={classNames(
                        "__wab_instance",
                        sty.heroAvatar__ahXgX
                      )}
                    />

                    <HeroAvatar
                      avatarImage={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___0KcxZ)}
                          displayHeight={"240px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"160px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/copy_of_cardless_com/images/ridaCareersjpg.jpeg",
                            fullWidth: 320,
                            fullHeight: 480,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      cardLocations={"left" as const}
                      className={classNames(
                        "__wab_instance",
                        sty.heroAvatar__szsyD
                      )}
                    >
                      {true ? (
                        <CareersInfoCard
                          data-plasmic-name={"careersInfoCard"}
                          data-plasmic-override={overrides.careersInfoCard}
                          cardContent={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ifIa8
                              )}
                            >
                              {'"Quote"'}
                            </div>
                          }
                          className={classNames(
                            "__wab_instance",
                            sty.careersInfoCard
                          )}
                        />
                      ) : null}
                    </HeroAvatar>

                    <HeroAvatar
                      avatarImage={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__iip2W)}
                          displayHeight={"240px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"160px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/copy_of_cardless_com/images/zachCareersjpg.jpeg",
                            fullWidth: 320,
                            fullHeight: 480,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      cardLocations={"left" as const}
                      className={classNames(
                        "__wab_instance",
                        sty.heroAvatar__t15Ek
                      )}
                    />

                    <HeroAvatar
                      avatarImage={
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__tHoMh)}
                          displayHeight={"240px" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"160px" as const}
                          loading={"lazy" as const}
                          src={{
                            src: "/plasmic/copy_of_cardless_com/images/aseemCareersjpg.jpeg",
                            fullWidth: 320,
                            fullHeight: 480,
                            aspectRatio: undefined
                          }}
                        />
                      }
                      cardLocations={"left" as const}
                      className={classNames(
                        "__wab_instance",
                        sty.heroAvatar___6LgMb
                      )}
                    />
                  </div>
                ) : null}
              </div>

              {(
                hasVariant(globalVariants, "screen", "mobile")
                  ? true
                  : hasVariant(globalVariants, "screen", "tablet")
                  ? true
                  : hasVariant(globalVariants, "screen", "laptopSmall")
                  ? true
                  : true
              ) ? (
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"mobilePhotos"}
                  data-plasmic-override={overrides.mobilePhotos}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.mobilePhotos)}
                >
                  {(
                    hasVariant(globalVariants, "screen", "mobile") ? true : true
                  ) ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__ah1Pf)}
                    >
                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__sHVm5)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? ("144px" as const)
                            : ("240px" as const)
                        }
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? ("96px" as const)
                            : ("160px" as const)
                        }
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/copy_of_cardless_com/images/adamCareersjpg.jpeg",
                          fullWidth: 320,
                          fullHeight: 480,
                          aspectRatio: undefined
                        }}
                      />

                      <p.PlasmicImg
                        alt={""}
                        className={classNames(sty.img__afOW)}
                        displayHeight={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? ("144px" as const)
                            : ("240px" as const)
                        }
                        displayMaxHeight={"none" as const}
                        displayMaxWidth={"100%" as const}
                        displayMinHeight={"0" as const}
                        displayMinWidth={"0" as const}
                        displayWidth={
                          hasVariant(globalVariants, "screen", "mobile")
                            ? ("96px" as const)
                            : ("160px" as const)
                        }
                        loading={"lazy" as const}
                        src={{
                          src: "/plasmic/copy_of_cardless_com/images/christinaCareersjpg.jpeg",
                          fullWidth: 320,
                          fullHeight: 480,
                          aspectRatio: undefined
                        }}
                      />
                    </p.Stack>
                  ) : null}

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__jyTpA)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__inKhN)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("144px" as const)
                          : ("240px" as const)
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("96px" as const)
                          : ("160px" as const)
                      }
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/copy_of_cardless_com/images/izzyCareersjpg.jpeg",
                        fullWidth: 320,
                        fullHeight: 480,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__wmZq2)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("144px" as const)
                          : ("240px" as const)
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("96px" as const)
                          : ("160px" as const)
                      }
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/copy_of_cardless_com/images/zachCareersjpg.jpeg",
                        fullWidth: 320,
                        fullHeight: 480,
                        aspectRatio: undefined
                      }}
                    />
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__ySho6)}
                  >
                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img___38HZp)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("144px" as const)
                          : ("240px" as const)
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("96px" as const)
                          : ("160px" as const)
                      }
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/copy_of_cardless_com/images/aseemCareersjpg.jpeg",
                        fullWidth: 320,
                        fullHeight: 480,
                        aspectRatio: undefined
                      }}
                    />

                    <p.PlasmicImg
                      alt={""}
                      className={classNames(sty.img__lR7Wj)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("144px" as const)
                          : ("240px" as const)
                      }
                      displayMaxHeight={"none" as const}
                      displayMaxWidth={"100%" as const}
                      displayMinHeight={"0" as const}
                      displayMinWidth={"0" as const}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobile")
                          ? ("96px" as const)
                          : ("160px" as const)
                      }
                      loading={"lazy" as const}
                      src={{
                        src: "/plasmic/copy_of_cardless_com/images/sarahCareersjpg.jpeg",
                        fullWidth: 320,
                        fullHeight: 480,
                        aspectRatio: undefined
                      }}
                    />
                  </p.Stack>
                </p.Stack>
              ) : null}
            </div>

            <PaddingWrapper>
              <p.Stack
                as={"div"}
                data-plasmic-name={"copyCta2"}
                data-plasmic-override={overrides.copyCta2}
                hasGap={true}
                className={classNames(projectcss.all, sty.copyCta2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"copy2"}
                  data-plasmic-override={overrides.copy2}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.copy2)}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"title"}
                    data-plasmic-override={overrides.title}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.title)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lMwoy
                      )}
                    >
                      {"What we do"}
                    </div>

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__ocCmz
                      )}
                    >
                      {
                        "We partner with brands to power products for their customers."
                      }
                    </div>
                  </p.Stack>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dp987
                    )}
                  >
                    {
                      "By partnering with brands to help them launch financial products, we will create a new status quo in consumer credit that is in service of the customer’s long-term good, has a low barrier to entry, and allows for rapid iteration."
                    }
                  </div>
                </p.Stack>

                <InlineButton
                  data-plasmic-name={"inlineButton"}
                  data-plasmic-override={overrides.inlineButton}
                  className={classNames("__wab_instance", sty.inlineButton)}
                  destination={"https://medium.com/cardlesseng" as const}
                  primaryButton2={"Read more"}
                />
              </p.Stack>
            </PaddingWrapper>
          </p.Stack>

          <div
            data-plasmic-name={"brandCallout"}
            data-plasmic-override={overrides.brandCallout}
            className={classNames(projectcss.all, sty.brandCallout)}
          >
            <PaddingWrapper>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.columns___1HBtF)}
              >
                <div className={classNames(projectcss.all, sty.column__eNllt)}>
                  <BrandLogo
                    className={classNames(
                      "__wab_instance",
                      sty.brandLogo__y1Wly
                    )}
                    logos={"manUtd" as const}
                    monochromatic={"monochromatic" as const}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__qaOHk)}>
                  <BrandLogo
                    className={classNames(
                      "__wab_instance",
                      sty.brandLogo__lW3Ww
                    )}
                    logos={"cavs" as const}
                    monochromatic={"monochromatic" as const}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__fc56S)}>
                  <BrandLogo
                    className={classNames(
                      "__wab_instance",
                      sty.brandLogo___6HaEd
                    )}
                    logos={"marlins" as const}
                    monochromatic={"monochromatic" as const}
                  />
                </div>

                <div className={classNames(projectcss.all, sty.column__q0YfI)}>
                  <BrandLogo
                    className={classNames(
                      "__wab_instance",
                      sty.brandLogo__waVit
                    )}
                    logos={"celtics" as const}
                    monochromatic={"monochromatic" as const}
                  />
                </div>
              </p.Stack>
            </PaddingWrapper>
          </div>

          <PaddingWrapper
            className={classNames("__wab_instance", sty.paddingWrapper__r4DU)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__evdu4)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__lIsri
                )}
              >
                {"Cardless is a place to..."}
              </div>

              <p.Stack
                as={"div"}
                data-plasmic-name={"grid"}
                data-plasmic-override={overrides.grid}
                hasGap={true}
                className={classNames(projectcss.all, sty.grid)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns__qFgIj)}
                >
                  <div
                    className={classNames(projectcss.all, sty.column__ogSrL)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__uDaLh)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___8LzA
                        )}
                      >
                        {"Be curious and be the solution"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yvc8M
                        )}
                      >
                        {
                          "We work in a complex space. In order to be successful, we must think globally and collaborate cross-functionally. We ask thoughtful questions without judgment and propose comprehensive solutions that address the full picture. We are all owners at Cardless — mindful and empowered."
                        }
                      </div>
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__oLqoP)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__bw5Gc)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__ll5Ey
                        )}
                      >
                        {"Do your best work"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__qp7I6
                        )}
                      >
                        {
                          "We are a team, and we achieve more together than apart. At Cardless, we want to see each other succeed: we take as much pride in each other’s work as our own. We celebrate and seek out diversity of experience, thought, and background in order to accelerate both individual and company growth. We're hungry, we're passionate, and we’re inspired to achieve great things together. "
                        }
                      </div>
                    </div>
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.columns___1BZt9)}
                >
                  <div className={classNames(projectcss.all, sty.column__gG2L)}>
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1NE6P
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yuypt
                        )}
                      >
                        {"Move fast and build things"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__hjEg
                        )}
                      >
                        {
                          "We are a startup in a highly regulated space, so we must execute with both speed and precision. We achieve this through deliberate focus, methodical preparation, and disciplined execution. We build, learn, improve, and repeat."
                        }
                      </div>
                    </div>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__gm7Jo)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___95Oui
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__xX7QO
                        )}
                      >
                        {"Start with the customer"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dv7EN
                        )}
                      >
                        {
                          "Our customers are our priority. Our care for them drives our actions. The first question we always ask is: how will this impact the customer? We make every decision, no matter how big or small, with the customer top of mind."
                        }
                      </div>
                    </div>
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </PaddingWrapper>

          <ImageLeft
            data-plasmic-name={"imageLeft"}
            data-plasmic-override={overrides.imageLeft}
            className={classNames("__wab_instance", sty.imageLeft)}
            slot={
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__hMvvn)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "laptopSmall")
                    ? ("100%" as const)
                    : ("auto" as const)
                }
                displayMaxHeight={"500px" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"100%" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/copy_of_cardless_com/images/dolparkCompressedjpg.jpeg",
                  fullWidth: 3691,
                  fullHeight: 2461,
                  aspectRatio: undefined
                }}
              />
            }
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__qtSfG)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__yCa4T
                )}
              >
                {"Join us from your home or our office"}
              </div>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__wOdq
                )}
              >
                {
                  "We want you to be in an environment you love — whether that’s your home or our beautiful office in San Francisco"
                }
              </div>
            </p.Stack>
          </ImageLeft>

          <CareersBenefits
            data-plasmic-name={"careersBenefits"}
            data-plasmic-override={overrides.careersBenefits}
            className={classNames("__wab_instance", sty.careersBenefits)}
          />

          <div className={classNames(projectcss.all, sty.freeBox__ocfz)}>
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__rv3Y8)}
            >
              <PaddingWrapper
                className={classNames(
                  "__wab_instance",
                  sty.paddingWrapper__ungno
                )}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___7B0KF)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__d5P8
                    )}
                  >
                    {"Backed by top investors"}
                  </div>

                  {(
                    hasVariant(globalVariants, "screen", "tabletSmall")
                      ? true
                      : true
                  ) ? (
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__rfCoA)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__buSgF
                        )}
                      >
                        <SvggIcon
                          className={classNames(projectcss.all, sty.svg__eyGhb)}
                          role={"img"}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__oeR6A
                        )}
                      >
                        <Svgg2Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___2RmaS
                          )}
                          role={"img"}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__geidi
                        )}
                      >
                        <Svgg3Icon
                          className={classNames(projectcss.all, sty.svg__tm5Vp)}
                          role={"img"}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___1Ir3H
                        )}
                      >
                        <PearGrayLogoIcon
                          className={classNames(projectcss.all, sty.svg__yGKa)}
                          role={"img"}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mjRQm
                        )}
                      >
                        <ClocktowerLogoIcon
                          className={classNames(projectcss.all, sty.svg__dsgzf)}
                          role={"img"}
                        />
                      </div>

                      {(
                        hasVariant(globalVariants, "screen", "tabletSmall")
                          ? true
                          : false
                      ) ? (
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___0DlOm
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__yu6Vv
                            )}
                          >
                            <SvggIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bBx4G
                              )}
                              role={"img"}
                            />
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__oPium
                            )}
                          >
                            <Svgg2Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__t3Raz
                              )}
                              role={"img"}
                            />
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__h9Qt1
                            )}
                          >
                            <Svgg3Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__aaBzt
                              )}
                              role={"img"}
                            />
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__s8Nti
                            )}
                          >
                            <PearGrayLogoIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bS6Oe
                              )}
                              role={"img"}
                            />
                          </div>

                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___0TaV
                            )}
                          >
                            <ClocktowerLogoIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__oLSk
                              )}
                              role={"img"}
                            />
                          </div>
                        </p.Stack>
                      ) : null}
                    </p.Stack>
                  ) : null}
                </p.Stack>
              </PaddingWrapper>

              {(
                hasVariant(globalVariants, "screen", "tabletSmall")
                  ? true
                  : false
              ) ? (
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__eE4L)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__vyZz0)}
                  >
                    <SvggIcon
                      className={classNames(projectcss.all, sty.svg__yt5Ve)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__xj1Wc)}
                  >
                    <Svgg2Icon
                      className={classNames(projectcss.all, sty.svg__wmEmC)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__bf9Bo)}
                  >
                    <Svgg3Icon
                      className={classNames(projectcss.all, sty.svg__zyzIt)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox___5LGY)}
                  >
                    <PearGrayLogoIcon
                      className={classNames(projectcss.all, sty.svg___1BCb)}
                      role={"img"}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__fq3MW)}
                  >
                    <ClocktowerLogoIcon
                      className={classNames(projectcss.all, sty.svg__lLwCn)}
                      role={"img"}
                    />
                  </div>
                </p.Stack>
              ) : null}
            </p.Stack>
          </div>

          <PaddingWrapper
            data-plasmic-name={"jobListings"}
            data-plasmic-override={overrides.jobListings}
            className={classNames("__wab_instance", sty.jobListings)}
          >
            <div
              className={classNames(projectcss.all, sty.freeBox__qqxR5)}
              id={"jobListings" as const}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nrlJo
                )}
              >
                {"Come work with us"}
              </div>

              {true
                ? p.renderPlasmicSlot({
                    defaultContents: (
                      <React.Fragment>
                        <CareersTeamSection
                          className={classNames(
                            "__wab_instance",
                            sty.careersTeamSection__lBgCt
                          )}
                          numOpenings={
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__oBeY
                              )}
                            >
                              {"#"}
                            </div>
                          }
                          open={"open" as const}
                          teamName={"Team name"}
                        >
                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting___2Jbe
                            )}
                          />

                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting__wg4Cx
                            )}
                          />

                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting__iF3A4
                            )}
                            roleTitle={"Role Title"}
                          />
                        </CareersTeamSection>

                        <CareersTeamSection
                          className={classNames(
                            "__wab_instance",
                            sty.careersTeamSection__fYxE9
                          )}
                          numOpenings={"#"}
                        >
                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting___26Pa
                            )}
                          />

                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting__cByjW
                            )}
                          />

                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting__m8Je7
                            )}
                            roleTitle={"Role Title"}
                          />
                        </CareersTeamSection>

                        <CareersTeamSection
                          className={classNames(
                            "__wab_instance",
                            sty.careersTeamSection__xbLwQ
                          )}
                          numOpenings={"#"}
                        >
                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting___056Wi
                            )}
                          />

                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting__jlT6E
                            )}
                          />

                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting___1DS
                            )}
                            roleTitle={"Role Title"}
                          />
                        </CareersTeamSection>

                        <CareersTeamSection
                          className={classNames(
                            "__wab_instance",
                            sty.careersTeamSection__mGgfi
                          )}
                          numOpenings={"#"}
                        >
                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting__fiJzR
                            )}
                          />

                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting__niaPb
                            )}
                          />

                          <CareersTeamPosting
                            className={classNames(
                              "__wab_instance",
                              sty.careersTeamPosting__uq2E4
                            )}
                            roleTitle={"Role Title"}
                          />
                        </CareersTeamSection>
                      </React.Fragment>
                    ),
                    value: args.allTeamSections,
                    className: classNames(sty.slotTargetAllTeamSections)
                  })
                : null}
            </div>
          </PaddingWrapper>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "hero",
    "navBarCodeComponent",
    "copyDownloadButtons3",
    "copy6",
    "navButton",
    "careersInfoCard",
    "mobilePhotos",
    "copyCta2",
    "copy2",
    "title",
    "inlineButton",
    "brandCallout",
    "grid",
    "imageLeft",
    "careersBenefits",
    "jobListings",
    "footer"
  ],
  hero: [
    "hero",
    "navBarCodeComponent",
    "copyDownloadButtons3",
    "copy6",
    "navButton",
    "careersInfoCard",
    "mobilePhotos",
    "copyCta2",
    "copy2",
    "title",
    "inlineButton"
  ],
  navBarCodeComponent: ["navBarCodeComponent"],
  copyDownloadButtons3: ["copyDownloadButtons3", "copy6", "navButton"],
  copy6: ["copy6"],
  navButton: ["navButton"],
  careersInfoCard: ["careersInfoCard"],
  mobilePhotos: ["mobilePhotos"],
  copyCta2: ["copyCta2", "copy2", "title", "inlineButton"],
  copy2: ["copy2", "title"],
  title: ["title"],
  inlineButton: ["inlineButton"],
  brandCallout: ["brandCallout"],
  grid: ["grid"],
  imageLeft: ["imageLeft"],
  careersBenefits: ["careersBenefits"],
  jobListings: ["jobListings"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  hero: "div";
  navBarCodeComponent: typeof NavBar;
  copyDownloadButtons3: "div";
  copy6: "div";
  navButton: typeof NavButton;
  careersInfoCard: typeof CareersInfoCard;
  mobilePhotos: "div";
  copyCta2: "div";
  copy2: "div";
  title: "div";
  inlineButton: typeof InlineButton;
  brandCallout: "div";
  grid: "div";
  imageLeft: typeof ImageLeft;
  careersBenefits: typeof CareersBenefits;
  jobListings: typeof PaddingWrapper;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicCareers__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicCareers__VariantsArgs;
    args?: PlasmicCareers__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicCareers__Fetches;
  } & Omit<PlasmicCareers__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicCareers__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicCareers__ArgProps,
      internalVariantPropNames: PlasmicCareers__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicCareers__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicCareers";
  } else {
    func.displayName = `PlasmicCareers.${nodeName}`;
  }
  return func;
}

export const PlasmicCareers = Object.assign(
  // Top-level PlasmicCareers renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    hero: makeNodeComponent("hero"),
    navBarCodeComponent: makeNodeComponent("navBarCodeComponent"),
    copyDownloadButtons3: makeNodeComponent("copyDownloadButtons3"),
    copy6: makeNodeComponent("copy6"),
    navButton: makeNodeComponent("navButton"),
    careersInfoCard: makeNodeComponent("careersInfoCard"),
    mobilePhotos: makeNodeComponent("mobilePhotos"),
    copyCta2: makeNodeComponent("copyCta2"),
    copy2: makeNodeComponent("copy2"),
    title: makeNodeComponent("title"),
    inlineButton: makeNodeComponent("inlineButton"),
    brandCallout: makeNodeComponent("brandCallout"),
    grid: makeNodeComponent("grid"),
    imageLeft: makeNodeComponent("imageLeft"),
    careersBenefits: makeNodeComponent("careersBenefits"),
    jobListings: makeNodeComponent("jobListings"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicCareers
    internalVariantProps: PlasmicCareers__VariantProps,
    internalArgProps: PlasmicCareers__ArgProps
  }
);

export default PlasmicCareers;
/* prettier-ignore-end */
