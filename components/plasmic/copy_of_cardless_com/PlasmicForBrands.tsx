// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 5bwAVSS7yxRyYYekzZSF6R
// Component: pV7UoE88AERx
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import { NavBar } from "../../layout/NavBar"; // plasmic-import: VpJrKbBamu0m/codeComponent
import PaddingWrapper from "../../PaddingWrapper"; // plasmic-import: 4i10JAkWDCTW/component
import NavButton from "../../NavButton"; // plasmic-import: s0OJmmocqt8k/component
import HeroImageCarousel from "../../HeroImageCarousel"; // plasmic-import: dhdHGgK5WGkB/component
import HeroImageCarouseltem from "../../HeroImageCarouseltem"; // plasmic-import: MMV2NaMzNI6o/component
import BrandLogo from "../../BrandLogo"; // plasmic-import: Ih8CO7qIPWwS/component
import ImageLeft from "../../ImageLeft"; // plasmic-import: i5UR_SxBMe0v/component
import MobileAppMock from "../../MobileAppMock"; // plasmic-import: L7fXatbRFIgn/component
import BrandsTable from "../../BrandsTable"; // plasmic-import: sGilO7-Qjn6_/component
import Footer from "../../Footer"; // plasmic-import: 4TDmEKfWsWRr/component

import { useScreenVariants as useScreenVariantsbUUiKYc55Zpu } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: bUUiKYc55Zpu/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import * as projectcss from "./plasmic_copy_of_cardless_com.module.css"; // plasmic-import: 5bwAVSS7yxRyYYekzZSF6R/projectcss
import * as sty from "./PlasmicForBrands.module.css"; // plasmic-import: pV7UoE88AERx/css

import ArrowRightIcon from "./icons/PlasmicIcon__ArrowRight"; // plasmic-import: E7YdTcD7oFygJ/icon

export type PlasmicForBrands__VariantMembers = {};

export type PlasmicForBrands__VariantsArgs = {};
type VariantPropType = keyof PlasmicForBrands__VariantsArgs;
export const PlasmicForBrands__VariantProps = new Array<VariantPropType>();

export type PlasmicForBrands__ArgsType = {};
type ArgPropType = keyof PlasmicForBrands__ArgsType;
export const PlasmicForBrands__ArgProps = new Array<ArgPropType>();

export type PlasmicForBrands__OverridesType = {
  root?: p.Flex<"div">;
  darkbg1?: p.Flex<"div">;
  navBarCodeComponent?: p.Flex<typeof NavBar>;
  hero?: p.Flex<"div">;
  copy12?: p.Flex<"div">;
  heroImageCarousel?: p.Flex<typeof HeroImageCarousel>;
  copy13?: p.Flex<"div">;
  logoCloud4Brands2?: p.Flex<"div">;
  row16?: p.Flex<"div">;
  frame3645?: p.Flex<"div">;
  frame3646?: p.Flex<"div">;
  row14?: p.Flex<"div">;
  frame3647?: p.Flex<"div">;
  frame3643?: p.Flex<"div">;
  imageLeft?: p.Flex<typeof ImageLeft>;
  logoCloud6Brands3?: p.Flex<"div">;
  copy15?: p.Flex<"div">;
  subheadingWrapper6?: p.Flex<"div">;
  benefitsRow4?: p.Flex<"div">;
  mobileAppMock?: p.Flex<typeof MobileAppMock>;
  copyCta4?: p.Flex<"div">;
  copy11?: p.Flex<"div">;
  subheadingWrapper4?: p.Flex<"div">;
  brandsTable?: p.Flex<typeof BrandsTable>;
  footer?: p.Flex<typeof Footer>;
};

export interface DefaultForBrandsProps {
  dataFetches: PlasmicForBrands__Fetches;
}

function PlasmicForBrands__RenderFunc(props: {
  variants: PlasmicForBrands__VariantsArgs;
  args: PlasmicForBrands__ArgsType;
  overrides: PlasmicForBrands__OverridesType;
  dataFetches?: PlasmicForBrands__Fetches;
  forNode?: string;
}) {
  const { variants, args, overrides, forNode, dataFetches } = props;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsbUUiKYc55Zpu()
  });

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            sty.root
          )}
        >
          <p.Stack
            as={"div"}
            data-plasmic-name={"darkbg1"}
            data-plasmic-override={overrides.darkbg1}
            hasGap={true}
            className={classNames(projectcss.all, sty.darkbg1)}
          >
            <NavBar
              data-plasmic-name={"navBarCodeComponent"}
              data-plasmic-override={overrides.navBarCodeComponent}
              className={classNames("__wab_instance", sty.navBarCodeComponent)}
              dark={true}
              noCta={true}
            />

            {(
              hasVariant(globalVariants, "screen", "laptopSmall") ? true : true
            ) ? (
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___4FWxR)}
              >
                <PaddingWrapper
                  className={classNames(
                    "__wab_instance",
                    sty.paddingWrapper__rcQz9
                  )}
                >
                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"hero"}
                    data-plasmic-override={overrides.hero}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.hero)}
                  >
                    <p.Stack
                      as={"div"}
                      data-plasmic-name={"copy12"}
                      data-plasmic-override={overrides.copy12}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.copy12)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__dz7RJ
                        )}
                      >
                        {hasVariant(globalVariants, "screen", "laptopSmall")
                          ? "Custom credit cards for any industry"
                          : "Custom credit cards for most industries"}
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__iubI7
                        )}
                      >
                        {
                          "Cardless can create engaging programs for retail, travel, e-commerce, dining, experiential and much more"
                        }
                      </div>
                    </p.Stack>

                    <NavButton
                      className={classNames(
                        "__wab_instance",
                        sty.navButton__qOzJo
                      )}
                      destination={
                        "mailto:hi@cardless.com?subject=Reaching%20out%20via%20Cardless.com" as const
                      }
                      type={"darkMode" as const}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vagGu
                        )}
                      >
                        {"Partner with us"}
                      </div>
                    </NavButton>
                  </p.Stack>
                </PaddingWrapper>

                <HeroImageCarousel
                  data-plasmic-name={"heroImageCarousel"}
                  data-plasmic-override={overrides.heroImageCarousel}
                  className={classNames(
                    "__wab_instance",
                    sty.heroImageCarousel
                  )}
                  items={
                    <React.Fragment>
                      <HeroImageCarouseltem
                        body={
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__lg24
                            )}
                          >
                            {hasVariant(globalVariants, "screen", "mobile")
                              ? "Leverage our generous rewards programs to reinforce the value of an in-store shopping experience"
                              : "Leverage our generous rewards programs to reinforce the value of an in-store shopping experience"}
                          </div>
                        }
                        centerImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___0VgC
                            )}
                          />
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.heroImageCarouseltem__gfHqA
                        )}
                        title={"Retail"}
                      />

                      <HeroImageCarouseltem
                        body={
                          "Our cards keep consumers engaged, with a strong incentive to transact directly with your brand"
                        }
                        centerImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__onypx
                            )}
                          />
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.heroImageCarouseltem__tuonC
                        )}
                        leftImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__a3Sus
                            )}
                          />
                        }
                        rightImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lgneo
                            )}
                          />
                        }
                        title={"Direct to consumer"}
                      />

                      <HeroImageCarouseltem
                        body={
                          "Lucrative earning and redemption opportunities will have your diners coming back again and again"
                        }
                        centerImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__gRvpT
                            )}
                          />
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.heroImageCarouseltem__zpX1
                        )}
                        leftImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__dPRdv
                            )}
                          />
                        }
                        rightImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__uLn8Q
                            )}
                          />
                        }
                        title={"Dining"}
                      />

                      <HeroImageCarouseltem
                        body={
                          "Keep your customers engaged even when they aren’t traveling, with added perks for frequent flyers and regular guests"
                        }
                        centerImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__aSxJ
                            )}
                          />
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.heroImageCarouseltem___6Zn1
                        )}
                        leftImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__nNxyF
                            )}
                          />
                        }
                        rightImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__woM13
                            )}
                          />
                        }
                        title={"Travel"}
                      />

                      <HeroImageCarouseltem
                        body={
                          "Reward your biggest fans with special experiences, valuable bonuses and generous rewards"
                        }
                        centerImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__fsIlX
                            )}
                          />
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.heroImageCarouseltem__pmIyt
                        )}
                        leftImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ckQde
                            )}
                          />
                        }
                        rightImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jpovv
                            )}
                          />
                        }
                        title={"Sports"}
                      />

                      <HeroImageCarouseltem
                        body={
                          "Connect with your players on and off-screen with a card that rewards their purchases"
                        }
                        centerImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___8O2Hi
                            )}
                          />
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.heroImageCarouseltem__i3PE5
                        )}
                        leftImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__urTcz
                            )}
                          />
                        }
                        rightImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__gvg3B
                            )}
                          />
                        }
                        title={"Gaming"}
                      />

                      <HeroImageCarouseltem
                        body={
                          "Enable your members to bring fitness goals within reach through discounts and rewards"
                        }
                        centerImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__e3Oab
                            )}
                          />
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.heroImageCarouseltem__kvBFn
                        )}
                        leftImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__lHPhw
                            )}
                          />
                        }
                        rightImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__cWq5F
                            )}
                          />
                        }
                        title={"Health & Fitness"}
                      />

                      <HeroImageCarouseltem
                        body={
                          "Reward customers for their purchases, no matter how big or small"
                        }
                        centerImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__w9Tov
                            )}
                          />
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.heroImageCarouseltem__etS6
                        )}
                        leftImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__gOsjR
                            )}
                          />
                        }
                        rightImage={
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___51UuU
                            )}
                          />
                        }
                        title={"Social Marketplace"}
                      />
                    </React.Fragment>
                  }
                />
              </p.Stack>
            ) : null}
          </p.Stack>

          <PaddingWrapper
            className={classNames("__wab_instance", sty.paddingWrapper__cOofm)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__tWi6P)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"copy13"}
                data-plasmic-override={overrides.copy13}
                hasGap={true}
                className={classNames(projectcss.all, sty.copy13)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___2X2P9
                  )}
                >
                  {"The brands you know and love"}
                </div>

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__rGtWt
                  )}
                >
                  {
                    "Cardless builds customized credit card programs, enabling brands to reward their customers with experiences, merchandise and exclusive offers"
                  }
                </div>
              </p.Stack>

              <p.Stack
                as={"div"}
                data-plasmic-name={"logoCloud4Brands2"}
                data-plasmic-override={overrides.logoCloud4Brands2}
                hasGap={true}
                className={classNames(projectcss.all, sty.logoCloud4Brands2)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"row16"}
                  data-plasmic-override={overrides.row16}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.row16)}
                >
                  <div
                    data-plasmic-name={"frame3645"}
                    data-plasmic-override={overrides.frame3645}
                    className={classNames(projectcss.all, sty.frame3645)}
                  >
                    <BrandLogo
                      className={classNames(
                        "__wab_instance",
                        sty.brandLogo__ly4Pa
                      )}
                      monochromatic={"monochromatic" as const}
                    />
                  </div>

                  <div
                    data-plasmic-name={"frame3646"}
                    data-plasmic-override={overrides.frame3646}
                    className={classNames(projectcss.all, sty.frame3646)}
                  >
                    <BrandLogo
                      className={classNames(
                        "__wab_instance",
                        sty.brandLogo__olSkb
                      )}
                      logos={"cavs" as const}
                      monochromatic={"monochromatic" as const}
                    />
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"row14"}
                  data-plasmic-override={overrides.row14}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.row14)}
                >
                  <div
                    data-plasmic-name={"frame3647"}
                    data-plasmic-override={overrides.frame3647}
                    className={classNames(projectcss.all, sty.frame3647)}
                  >
                    <BrandLogo
                      className={classNames(
                        "__wab_instance",
                        sty.brandLogo__tBdg
                      )}
                      logos={"manUtd" as const}
                      monochromatic={"monochromatic" as const}
                    />
                  </div>

                  <div
                    data-plasmic-name={"frame3643"}
                    data-plasmic-override={overrides.frame3643}
                    className={classNames(projectcss.all, sty.frame3643)}
                  >
                    <BrandLogo
                      className={classNames(
                        "__wab_instance",
                        sty.brandLogo__enKlC
                      )}
                      logos={"celtics" as const}
                      monochromatic={"monochromatic" as const}
                    />
                  </div>
                </p.Stack>
              </p.Stack>
            </p.Stack>
          </PaddingWrapper>

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox___4X56)}
          >
            <ImageLeft
              data-plasmic-name={"imageLeft"}
              data-plasmic-override={overrides.imageLeft}
              className={classNames("__wab_instance", sty.imageLeft)}
              slot={
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"logoCloud6Brands3"}
                  data-plasmic-override={overrides.logoCloud6Brands3}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.logoCloud6Brands3)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__yt3Cd)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__kiXXi)}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__fkvc)}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__edZ0R)}
                    />
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__s9VFy)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__ugbu3)}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__wB4Z6)}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__zBbG8)}
                    />
                  </p.Stack>

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___3ClOy)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.freeBox__g4KzW)}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__bzVtG)}
                    />

                    <div
                      className={classNames(projectcss.all, sty.freeBox__kkOk)}
                    />
                  </p.Stack>
                </p.Stack>
              }
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"copy15"}
                data-plasmic-override={overrides.copy15}
                hasGap={true}
                className={classNames(projectcss.all, sty.copy15)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wq4Xb
                  )}
                >
                  {hasVariant(globalVariants, "screen", "tablet")
                    ? "Connect with your customers"
                    : "Connect with your customers"}
                </div>

                <p.Stack
                  as={"div"}
                  data-plasmic-name={"subheadingWrapper6"}
                  data-plasmic-override={overrides.subheadingWrapper6}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.subheadingWrapper6)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__ow72V
                    )}
                  >
                    {
                      "A partnership with Cardless can fundamentally shift how consumers interact with your brand"
                    }
                  </div>
                </p.Stack>
              </p.Stack>
            </ImageLeft>

            <PaddingWrapper
              className={classNames("__wab_instance", sty.paddingWrapper__jWh1)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"benefitsRow4"}
                data-plasmic-override={overrides.benefitsRow4}
                hasGap={true}
                className={classNames(projectcss.all, sty.benefitsRow4)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___3Eu89)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__aAtF
                    )}
                  >
                    {"Loyalty"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hyutR
                    )}
                  >
                    {
                      "Cardholders are incentivized to shop more on your website, app, and other channels"
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__gXop)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___4SYn
                    )}
                  >
                    {"Retention"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kY4NL
                    )}
                  >
                    {
                      "A custom credit card can help keep your brand top of mind and top of wallet"
                    }
                  </div>
                </p.Stack>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rwZ53)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__kDynK
                    )}
                  >
                    {"Engagement"}
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1WwLx
                    )}
                  >
                    {
                      "High-value benefits and rewards can lead to more frequent, impactful transactions"
                    }
                  </div>
                </p.Stack>
              </p.Stack>
            </PaddingWrapper>
          </p.Stack>

          <MobileAppMock
            data-plasmic-name={"mobileAppMock"}
            data-plasmic-override={overrides.mobileAppMock}
            caption={
              "From application to daily use, our high-tech platform enables a simple, rewarding experience throughout each customer’s journey"
            }
            className={classNames("__wab_instance", sty.mobileAppMock)}
            forBrands={"forBrands" as const}
            header4={"Customers love Cardless too"}
            hideAppLinks={"hideAppLinks" as const}
            showCaption={"showCaption" as const}
            slot={
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__wRdJm)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "tablet")
                    ? ("auto" as const)
                    : hasVariant(globalVariants, "screen", "laptopSmall")
                    ? ("auto" as const)
                    : ("100%" as const)
                }
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"100%" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/copy_of_cardless_com/images/manuCard2.png",
                  fullWidth: 2048,
                  fullHeight: 1292,
                  aspectRatio: undefined
                }}
              />
            }
            slot2={
              <p.PlasmicImg
                alt={""}
                className={classNames(sty.img__qHgoK)}
                displayHeight={"477.186px" as const}
                displayMaxHeight={"none" as const}
                displayMaxWidth={"100%" as const}
                displayMinHeight={"0" as const}
                displayMinWidth={"0" as const}
                displayWidth={"220.292px" as const}
                loading={"lazy" as const}
                src={{
                  src: "/plasmic/copy_of_cardless_com/images/oldUiMarlinspng.png",
                  fullWidth: 750,
                  fullHeight: 1624,
                  aspectRatio: undefined
                }}
              />
            }
          />

          <p.Stack
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__zrDa2)}
          >
            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__pBiee)}
            >
              <p.Stack
                as={"div"}
                data-plasmic-name={"copyCta4"}
                data-plasmic-override={overrides.copyCta4}
                hasGap={true}
                className={classNames(projectcss.all, sty.copyCta4)}
              >
                <p.Stack
                  as={"div"}
                  data-plasmic-name={"copy11"}
                  data-plasmic-override={overrides.copy11}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.copy11)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__bkjdg
                    )}
                  >
                    {"Why Cardless"}
                  </div>

                  <p.Stack
                    as={"div"}
                    data-plasmic-name={"subheadingWrapper4"}
                    data-plasmic-override={overrides.subheadingWrapper4}
                    hasGap={true}
                    className={classNames(
                      projectcss.all,
                      sty.subheadingWrapper4
                    )}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__cOi9G
                      )}
                    >
                      {
                        "Launch a credit card program in record time, and begin more meaningfully interacting with your customers"
                      }
                    </div>
                  </p.Stack>
                </p.Stack>

                <NavButton
                  className={classNames("__wab_instance", sty.navButton__t3Z4K)}
                  destination={
                    "mailto:hi@cardless.com?subject=Reaching%20out%20via%20Cardless.com" as const
                  }
                  type={"primary" as const}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mLlIn
                    )}
                  >
                    {"Partner with us"}
                  </div>
                </NavButton>
              </p.Stack>

              <BrandsTable
                data-plasmic-name={"brandsTable"}
                data-plasmic-override={overrides.brandsTable}
                className={classNames("__wab_instance", sty.brandsTable)}
              />
            </p.Stack>
          </p.Stack>

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "darkbg1",
    "navBarCodeComponent",
    "hero",
    "copy12",
    "heroImageCarousel",
    "copy13",
    "logoCloud4Brands2",
    "row16",
    "frame3645",
    "frame3646",
    "row14",
    "frame3647",
    "frame3643",
    "imageLeft",
    "logoCloud6Brands3",
    "copy15",
    "subheadingWrapper6",
    "benefitsRow4",
    "mobileAppMock",
    "copyCta4",
    "copy11",
    "subheadingWrapper4",
    "brandsTable",
    "footer"
  ],
  darkbg1: [
    "darkbg1",
    "navBarCodeComponent",
    "hero",
    "copy12",
    "heroImageCarousel"
  ],
  navBarCodeComponent: ["navBarCodeComponent"],
  hero: ["hero", "copy12"],
  copy12: ["copy12"],
  heroImageCarousel: ["heroImageCarousel"],
  copy13: ["copy13"],
  logoCloud4Brands2: [
    "logoCloud4Brands2",
    "row16",
    "frame3645",
    "frame3646",
    "row14",
    "frame3647",
    "frame3643"
  ],
  row16: ["row16", "frame3645", "frame3646"],
  frame3645: ["frame3645"],
  frame3646: ["frame3646"],
  row14: ["row14", "frame3647", "frame3643"],
  frame3647: ["frame3647"],
  frame3643: ["frame3643"],
  imageLeft: ["imageLeft", "logoCloud6Brands3", "copy15", "subheadingWrapper6"],
  logoCloud6Brands3: ["logoCloud6Brands3"],
  copy15: ["copy15", "subheadingWrapper6"],
  subheadingWrapper6: ["subheadingWrapper6"],
  benefitsRow4: ["benefitsRow4"],
  mobileAppMock: ["mobileAppMock"],
  copyCta4: ["copyCta4", "copy11", "subheadingWrapper4"],
  copy11: ["copy11", "subheadingWrapper4"],
  subheadingWrapper4: ["subheadingWrapper4"],
  brandsTable: ["brandsTable"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  darkbg1: "div";
  navBarCodeComponent: typeof NavBar;
  hero: "div";
  copy12: "div";
  heroImageCarousel: typeof HeroImageCarousel;
  copy13: "div";
  logoCloud4Brands2: "div";
  row16: "div";
  frame3645: "div";
  frame3646: "div";
  row14: "div";
  frame3647: "div";
  frame3643: "div";
  imageLeft: typeof ImageLeft;
  logoCloud6Brands3: "div";
  copy15: "div";
  subheadingWrapper6: "div";
  benefitsRow4: "div";
  mobileAppMock: typeof MobileAppMock;
  copyCta4: "div";
  copy11: "div";
  subheadingWrapper4: "div";
  brandsTable: typeof BrandsTable;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicForBrands__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicForBrands__VariantsArgs;
    args?: PlasmicForBrands__ArgsType;
    overrides?: NodeOverridesType<T>;
    dataFetches?: PlasmicForBrands__Fetches;
  } & Omit<PlasmicForBrands__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicForBrands__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicForBrands__ArgProps,
      internalVariantPropNames: PlasmicForBrands__VariantProps
    });

    const { dataFetches } = props;

    return PlasmicForBrands__RenderFunc({
      variants,
      args,
      overrides,
      dataFetches,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicForBrands";
  } else {
    func.displayName = `PlasmicForBrands.${nodeName}`;
  }
  return func;
}

export const PlasmicForBrands = Object.assign(
  // Top-level PlasmicForBrands renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    darkbg1: makeNodeComponent("darkbg1"),
    navBarCodeComponent: makeNodeComponent("navBarCodeComponent"),
    hero: makeNodeComponent("hero"),
    copy12: makeNodeComponent("copy12"),
    heroImageCarousel: makeNodeComponent("heroImageCarousel"),
    copy13: makeNodeComponent("copy13"),
    logoCloud4Brands2: makeNodeComponent("logoCloud4Brands2"),
    row16: makeNodeComponent("row16"),
    frame3645: makeNodeComponent("frame3645"),
    frame3646: makeNodeComponent("frame3646"),
    row14: makeNodeComponent("row14"),
    frame3647: makeNodeComponent("frame3647"),
    frame3643: makeNodeComponent("frame3643"),
    imageLeft: makeNodeComponent("imageLeft"),
    logoCloud6Brands3: makeNodeComponent("logoCloud6Brands3"),
    copy15: makeNodeComponent("copy15"),
    subheadingWrapper6: makeNodeComponent("subheadingWrapper6"),
    benefitsRow4: makeNodeComponent("benefitsRow4"),
    mobileAppMock: makeNodeComponent("mobileAppMock"),
    copyCta4: makeNodeComponent("copyCta4"),
    copy11: makeNodeComponent("copy11"),
    subheadingWrapper4: makeNodeComponent("subheadingWrapper4"),
    brandsTable: makeNodeComponent("brandsTable"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicForBrands
    internalVariantProps: PlasmicForBrands__VariantProps,
    internalArgProps: PlasmicForBrands__ArgProps
  }
);

export default PlasmicForBrands;
/* prettier-ignore-end */
